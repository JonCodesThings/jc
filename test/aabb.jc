import vector;
import io;

struct AABB
{
	Vector2 position;
	Vector2 size;
}

ConstructAABB(AABB *to_construct, f32 x, f32 y, f32 width, f32 height)
{
	to_construct->position.x = x;
	to_construct->position.y = y;
	to_construct->size.x = width;
	to_construct->size.y = height;
}

IsColliding(AABB *first, AABB *second)
{
	f32 first_right = first->position.x + first->size.x;
	f32 first_bottom = first->position.y + first->size.y;

	f32 second_right = second->position.x + second->size.x;
	f32 second_bottom = second->position.y + second->size.y;

	if (first_right < second->position.x)
	{
		return false;
	}

    if (first->position.x > second_right)
	{
		return false;
	}

	if (first_bottom < second->position.y)
	{
		return false;
	}

	if (first->position.y > second_bottom)
	{
		return false;
	}

	return true;
}


main()
{
	AABB oof[10];

	height := 16.0f;
	width := 16.0f;

	for (i := 0; i < 10; i++)
	{
		it := (f32)i;
		x := it * 32.0f;
		y := it * 32.0f;
		
		ConstructAABB(&oof[i], x, y, width, height);
	}

	for (j := 0; j < 10; j++)
	{
		for (k := 0; k < 10; k++)
		{
			if (j != k)
			{
				iscoll := IsColliding(&oof[j], &oof[k]);
				
				if (iscoll == true)
				{
					printf("AABB collision detected with boxes %d and %d!\n", j, k);
				}
			}
		}
	}

	


	return 0;
}