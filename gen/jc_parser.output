Terminals unused in grammar

   EXCLAMATION
   AND_AND
   OR_OR
   AUTO
   EXTERN
   UNKNOWN


Rules useless in parser due to conflicts

   28 statement: struct_decl


State 25 conflicts: 19 reduce/reduce
State 89 conflicts: 2 shift/reduce
State 118 conflicts: 1 shift/reduce
State 142 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: module $end

    1 module: statements

    2 statements: node_setup
    3           | statements node_setup

    4 node_setup: statement
    5           | statement SEMICOLON

    6 semicoloned_statements: semicoloned_statement
    7                       | semicoloned_statements semicoloned_statement

    8 semicoloned_statement: statement SEMICOLON
    9                      | assignable_statement SEMICOLON
   10                      | flow_control
   11                      | defer_statement SEMICOLON
   12                      | function_def

   13 statement: return_statement
   14          | function_decl
   15          | variable_decl
   16          | assign_op
   17          | alias_statement
   18          | typedef_statement
   19          | struct_def
   20          | struct_decl
   21          | import
   22          | include_or_link
   23          | func_ptr
   24          | enum_def
   25          | union_def
   26          | flow_control
   27          | function_def
   28          | struct_decl

   29 alias_statement: ALIAS TYPE TYPE

   30 typedef_statement: TYPEDEF TYPE TYPE

   31 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE
   32           | EXPORT struct_def

   33 struct_decl: STRUCT type

   34 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE
   35          | EXPORT union_def

   36 defer_statement: DEFER assignable_statement

   37 assignable_statement: function_call
   38                     | unary_op
   39                     | binary_op
   40                     | member_op
   41                     | id_or_constant

   42 flow_control: if_statement
   43             | loop

   44 loop: while_loop
   45     | for_loop

   46 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE
   47      | LEFT_BRACE RIGHT_BRACE

   48 import: IMPORT id

   49 unary_op: cast
   50         | increment
   51         | decrement
   52         | address_of
   53         | dereference
   54         | array_index
   55         | unary_minus
   56         | unary_plus

   57 unary_minus: MINUS id_or_constant

   58 unary_plus: PLUS id_or_constant

   59 binary_op: binop

   60 assign_op: variable_assign

   61 memberable: id
   62           | array_index

   63 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET

   65 member_op: memberable FSTOP memberable
   66          | memberable FSTOP member_op
   67          | memberable ARROW memberable
   68          | memberable ARROW member_op

   69 variable_assign: id EQUAL assignable_statement
   70                | array_index EQUAL assignable_statement
   71                | member_op EQUAL assignable_statement

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET id_or_constant

   73 increment: id_or_constant PLUS PLUS

   74 decrement: id_or_constant MINUS MINUS

   75 address_of: AND id

   76 dereference: ASTERISK id

   77 binop_id: PLUS
   78         | MINUS
   79         | ASTERISK
   80         | FORWARD_SLASH
   81         | EQUAL_EQUAL
   82         | EXCLAMATION_EQUAL
   83         | LESSER
   84         | GREATER
   85         | LESSER_EQUAL
   86         | GREATER_EQUAL
   87         | AND
   88         | OR
   89         | LEFT_SHIFT
   90         | RIGHT_SHIFT
   91         | PERCENT

   92 binop: id_or_constant binop_id id_or_constant
   93      | id_or_constant binop_id unary_op
   94      | unary_op binop_id id_or_constant
   95      | member_op binop_id member_op
   96      | id_or_constant binop_id member_op
   97      | member_op binop_id id_or_constant

   98 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET scope
   99             | composited_type id LEFT_BRACKET RIGHT_BRACKET scope
  100             | id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  101             | id LEFT_BRACKET RIGHT_BRACKET scope
  102             | EXPORT function_def

  103 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  104              | composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  105              | EXPORT function_decl

  106 function_call: id LEFT_BRACKET RIGHT_BRACKET
  107              | id LEFT_BRACKET statement_list RIGHT_BRACKET

  108 variable_decl: composited_type id
  109              | id COLON EQUAL assignable_statement
  110              | composited_type id EQUAL assignable_statement
  111              | array_decl
  112              | EXPORT variable_decl

  113 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  114           | composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  115           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  116           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

  117 init_list: id_or_constant
  118          | init_list COMMA id_or_constant

  119 return_statement: RETURN assignable_statement

  120 if_statement: cond_block
  121             | cond_block ELSE scope

  122 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope
  123           | cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  124 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

  126 struct_list: struct_list struct_pair
  127            | struct_pair

  128 struct_pair: composited_type id SEMICOLON
  129            | composited_type id EQUAL assignable_statement SEMICOLON

  130 arg_list: arg_list COMMA arg_pair
  131         | arg_pair

  132 statement_list: statement_list COMMA assignable_statement
  133               | assignable_statement

  134 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET
  135         | EXPORT func_ptr

  136 arg_pair: composited_type id
  137         | FSTOP FSTOP FSTOP

  138 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE
  139         | EXPORT enum_def

  140 enum_parts: enum_part
  141           | enum_parts COMMA enum_part

  142 enum_part: id
  143          | id EQUAL constant_int

  144 id_or_constant: id
  145               | constant

  146 include_or_link: INCLUDE STRING
  147                | LINK STRING

  148 constant: constant_int
  149         | constant_enum_value
  150         | constant_bool
  151         | FLOAT
  152         | STRING
  153         | NULLPTR

  154 constant_int: INTEGER

  155 constant_bool: TRUE
  156              | FALSE

  157 constant_enum_value: type COLON COLON id

  158 id: IDENTIFIER

  159 type: TYPE

  160 composited_type: type
  161                | MUT composited_type
  162                | composited_type ASTERISK
  163                | composited_type MUT

  164 type_list: composited_type
  165          | type_list COMMA composited_type


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 158
STRING (259) 146 147 152
INTEGER (260) 154
FLOAT (261) 151
TYPE (262) 29 30 159
LEFT_BRACKET (263) 72 98 99 100 101 103 104 106 107 122 123 124 125
    134
RIGHT_BRACKET (264) 72 98 99 100 101 103 104 106 107 122 123 124 125
    134
LEFT_BRACE (265) 31 34 46 47 114 116 138
RIGHT_BRACE (266) 31 34 46 47 114 116 138
LEFT_SQUARE_BRACKET (267) 63 64 113 114 115 116
RIGHT_SQUARE_BRACKET (268) 63 64 113 114 115 116
COMMA (269) 118 130 132 141 165
FSTOP (270) 65 66 137
SEMICOLON (271) 5 8 9 11 103 104 125 128 129
COLON (272) 109 157
PLUS (273) 58 73 77
MINUS (274) 57 74 78
ASTERISK (275) 76 79 162
FORWARD_SLASH (276) 80
PERCENT (277) 91
EQUAL (278) 69 70 71 109 110 114 116 129 143
EQUAL_EQUAL (279) 81
EXCLAMATION (280)
EXCLAMATION_EQUAL (281) 82
GREATER (282) 84
GREATER_EQUAL (283) 86
LESSER (284) 83
LESSER_EQUAL (285) 85
AND (286) 75 87
AND_AND (287)
OR (288) 88
OR_OR (289)
LEFT_SHIFT (290) 89
RIGHT_SHIFT (291) 90
RETURN (292) 119
DEFER (293) 36
IF (294) 122 123
ELSE (295) 121 123
FOR (296) 125
WHILE (297) 124
TYPEDEF (298) 30
ALIAS (299) 29
AUTO (300)
ENUM (301) 138
UNION (302) 34
TRUE (303) 155
FALSE (304) 156
MUT (305) 115 116 161 163
EXTERN (306)
IMPORT (307) 48
EXPORT (308) 32 35 102 105 112 135 139
INCLUDE (309) 146
LINK (310) 147
FUNC_PTR (311) 134
NULLPTR (312) 153
STRUCT (313) 31 33
ARROW (314) 67 68
UNKNOWN (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
module (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3
node_setup (64)
    on left: 4 5, on right: 2 3
semicoloned_statements (65)
    on left: 6 7, on right: 7 46
semicoloned_statement (66)
    on left: 8 9 10 11 12, on right: 6 7
statement (67)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 5 8 125
alias_statement (68)
    on left: 29, on right: 17
typedef_statement (69)
    on left: 30, on right: 18
struct_def (70)
    on left: 31 32, on right: 19 32
struct_decl (71)
    on left: 33, on right: 20 28
union_def (72)
    on left: 34 35, on right: 25 35
defer_statement (73)
    on left: 36, on right: 11
assignable_statement (74)
    on left: 37 38 39 40 41, on right: 9 36 69 70 71 109 110 119 122
    123 124 125 129 132 133
flow_control (75)
    on left: 42 43, on right: 10 26
loop (76)
    on left: 44 45, on right: 43
scope (77)
    on left: 46 47, on right: 98 99 100 101 121 122 123 124 125
import (78)
    on left: 48, on right: 21
unary_op (79)
    on left: 49 50 51 52 53 54 55 56, on right: 38 93 94
unary_minus (80)
    on left: 57, on right: 55
unary_plus (81)
    on left: 58, on right: 56
binary_op (82)
    on left: 59, on right: 39
assign_op (83)
    on left: 60, on right: 16
memberable (84)
    on left: 61 62, on right: 65 66 67 68
array_index (85)
    on left: 63 64, on right: 54 62 70
member_op (86)
    on left: 65 66 67 68, on right: 40 66 68 71 95 96 97
variable_assign (87)
    on left: 69 70 71, on right: 60
cast (88)
    on left: 72, on right: 49
increment (89)
    on left: 73, on right: 50
decrement (90)
    on left: 74, on right: 51
address_of (91)
    on left: 75, on right: 52
dereference (92)
    on left: 76, on right: 53
binop_id (93)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91, on right:
    92 93 94 95 96 97
binop (94)
    on left: 92 93 94 95 96 97, on right: 59
function_def (95)
    on left: 98 99 100 101 102, on right: 12 27 102
function_decl (96)
    on left: 103 104 105, on right: 14 105
function_call (97)
    on left: 106 107, on right: 37
variable_decl (98)
    on left: 108 109 110 111 112, on right: 15 112
array_decl (99)
    on left: 113 114 115 116, on right: 111
init_list (100)
    on left: 117 118, on right: 114 116 118
return_statement (101)
    on left: 119, on right: 13
if_statement (102)
    on left: 120 121, on right: 42
cond_block (103)
    on left: 122 123, on right: 120 121 123
while_loop (104)
    on left: 124, on right: 44
for_loop (105)
    on left: 125, on right: 45
struct_list (106)
    on left: 126 127, on right: 31 34 126
struct_pair (107)
    on left: 128 129, on right: 126 127
arg_list (108)
    on left: 130 131, on right: 98 100 104 130
statement_list (109)
    on left: 132 133, on right: 107 132
func_ptr (110)
    on left: 134 135, on right: 23 135
arg_pair (111)
    on left: 136 137, on right: 130 131
enum_def (112)
    on left: 138 139, on right: 24 139
enum_parts (113)
    on left: 140 141, on right: 138 141
enum_part (114)
    on left: 142 143, on right: 140 141
id_or_constant (115)
    on left: 144 145, on right: 41 57 58 72 73 74 92 93 94 96 97 117
    118
include_or_link (116)
    on left: 146 147, on right: 22
constant (117)
    on left: 148 149 150 151 152 153, on right: 145
constant_int (118)
    on left: 154, on right: 63 113 114 115 116 143 148
constant_bool (119)
    on left: 155 156, on right: 150
constant_enum_value (120)
    on left: 157, on right: 149
id (121)
    on left: 158, on right: 48 61 63 64 69 75 76 98 99 100 101 103
    104 106 107 108 109 110 113 114 115 116 128 129 136 142 143 144
    157
type (122)
    on left: 159, on right: 31 33 34 134 138 157 160
composited_type (123)
    on left: 160 161 162 163, on right: 72 98 99 103 104 108 110 113
    114 115 116 128 129 136 161 162 163 164 165
type_list (124)
    on left: 164 165, on right: 134 165


State 0

    0 $accept: . module $end

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    module             go to state 18
    statements         go to state 19
    node_setup         go to state 20
    statement          go to state 21
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 1

  158 id: IDENTIFIER .

    $default  reduce using rule 158 (id)


State 2

  159 type: TYPE .

    $default  reduce using rule 159 (type)


State 3

  119 return_statement: RETURN . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 61
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 4

  122 cond_block: IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 82


State 5

  125 for_loop: FOR . LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 83


State 6

  124 while_loop: WHILE . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 84


State 7

   30 typedef_statement: TYPEDEF . TYPE TYPE

    TYPE  shift, and go to state 85


State 8

   29 alias_statement: ALIAS . TYPE TYPE

    TYPE  shift, and go to state 86


State 9

  138 enum_def: ENUM . type LEFT_BRACE enum_parts RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 87


State 10

   34 union_def: UNION . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 88


State 11

  161 composited_type: MUT . composited_type

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 89


State 12

   48 import: IMPORT . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 90


State 13

   32 struct_def: EXPORT . struct_def
   35 union_def: EXPORT . union_def
  102 function_def: EXPORT . function_def
  105 function_decl: EXPORT . function_decl
  112 variable_decl: EXPORT . variable_decl
  135 func_ptr: EXPORT . func_ptr
  139 enum_def: EXPORT . enum_def

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    EXPORT      shift, and go to state 13
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 91

    struct_def       go to state 92
    union_def        go to state 93
    function_def     go to state 94
    function_decl    go to state 95
    variable_decl    go to state 96
    array_decl       go to state 38
    func_ptr         go to state 97
    enum_def         go to state 98
    id               go to state 99
    type             go to state 48
    composited_type  go to state 49


State 14

  146 include_or_link: INCLUDE . STRING

    STRING  shift, and go to state 100


State 15

  147 include_or_link: LINK . STRING

    STRING  shift, and go to state 101


State 16

  134 func_ptr: FUNC_PTR . type type LEFT_BRACKET type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type  go to state 102


State 17

   31 struct_def: STRUCT . type LEFT_BRACE struct_list RIGHT_BRACE
   33 struct_decl: STRUCT . type

    TYPE  shift, and go to state 2

    type  go to state 103


State 18

    0 $accept: module . $end

    $end  shift, and go to state 104


State 19

    1 module: statements .
    3 statements: statements . node_setup

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    $default  reduce using rule 1 (module)

    node_setup         go to state 105
    statement          go to state 21
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 20

    2 statements: node_setup .

    $default  reduce using rule 2 (statements)


State 21

    4 node_setup: statement .
    5           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 106

    $default  reduce using rule 4 (node_setup)


State 22

   17 statement: alias_statement .

    $default  reduce using rule 17 (statement)


State 23

   18 statement: typedef_statement .

    $default  reduce using rule 18 (statement)


State 24

   19 statement: struct_def .

    $default  reduce using rule 19 (statement)


State 25

   20 statement: struct_decl .
   28          | struct_decl .

    $end        reduce using rule 20 (statement)
    $end        [reduce using rule 28 (statement)]
    IDENTIFIER  reduce using rule 20 (statement)
    IDENTIFIER  [reduce using rule 28 (statement)]
    TYPE        reduce using rule 20 (statement)
    TYPE        [reduce using rule 28 (statement)]
    SEMICOLON   reduce using rule 20 (statement)
    SEMICOLON   [reduce using rule 28 (statement)]
    RETURN      reduce using rule 20 (statement)
    RETURN      [reduce using rule 28 (statement)]
    IF          reduce using rule 20 (statement)
    IF          [reduce using rule 28 (statement)]
    FOR         reduce using rule 20 (statement)
    FOR         [reduce using rule 28 (statement)]
    WHILE       reduce using rule 20 (statement)
    WHILE       [reduce using rule 28 (statement)]
    TYPEDEF     reduce using rule 20 (statement)
    TYPEDEF     [reduce using rule 28 (statement)]
    ALIAS       reduce using rule 20 (statement)
    ALIAS       [reduce using rule 28 (statement)]
    ENUM        reduce using rule 20 (statement)
    ENUM        [reduce using rule 28 (statement)]
    UNION       reduce using rule 20 (statement)
    UNION       [reduce using rule 28 (statement)]
    MUT         reduce using rule 20 (statement)
    MUT         [reduce using rule 28 (statement)]
    IMPORT      reduce using rule 20 (statement)
    IMPORT      [reduce using rule 28 (statement)]
    EXPORT      reduce using rule 20 (statement)
    EXPORT      [reduce using rule 28 (statement)]
    INCLUDE     reduce using rule 20 (statement)
    INCLUDE     [reduce using rule 28 (statement)]
    LINK        reduce using rule 20 (statement)
    LINK        [reduce using rule 28 (statement)]
    FUNC_PTR    reduce using rule 20 (statement)
    FUNC_PTR    [reduce using rule 28 (statement)]
    STRUCT      reduce using rule 20 (statement)
    STRUCT      [reduce using rule 28 (statement)]
    $default    reduce using rule 20 (statement)


State 26

   25 statement: union_def .

    $default  reduce using rule 25 (statement)


State 27

   26 statement: flow_control .

    $default  reduce using rule 26 (statement)


State 28

   43 flow_control: loop .

    $default  reduce using rule 43 (flow_control)


State 29

   21 statement: import .

    $default  reduce using rule 21 (statement)


State 30

   16 statement: assign_op .

    $default  reduce using rule 16 (statement)


State 31

   65 member_op: memberable . FSTOP memberable
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108


State 32

   62 memberable: array_index .
   70 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 109

    $default  reduce using rule 62 (memberable)


State 33

   71 variable_assign: member_op . EQUAL assignable_statement

    EQUAL  shift, and go to state 110


State 34

   60 assign_op: variable_assign .

    $default  reduce using rule 60 (assign_op)


State 35

   27 statement: function_def .

    $default  reduce using rule 27 (statement)


State 36

   14 statement: function_decl .

    $default  reduce using rule 14 (statement)


State 37

   15 statement: variable_decl .

    $default  reduce using rule 15 (statement)


State 38

  111 variable_decl: array_decl .

    $default  reduce using rule 111 (variable_decl)


State 39

   13 statement: return_statement .

    $default  reduce using rule 13 (statement)


State 40

   42 flow_control: if_statement .

    $default  reduce using rule 42 (flow_control)


State 41

  120 if_statement: cond_block .
  121             | cond_block . ELSE scope
  123 cond_block: cond_block . ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    ELSE  shift, and go to state 111

    $default  reduce using rule 120 (if_statement)


State 42

   44 loop: while_loop .

    $default  reduce using rule 44 (loop)


State 43

   45 loop: for_loop .

    $default  reduce using rule 45 (loop)


State 44

   23 statement: func_ptr .

    $default  reduce using rule 23 (statement)


State 45

   24 statement: enum_def .

    $default  reduce using rule 24 (statement)


State 46

   22 statement: include_or_link .

    $default  reduce using rule 22 (statement)


State 47

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
   69 variable_assign: id . EQUAL assignable_statement
  100 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  101             | id . LEFT_BRACKET RIGHT_BRACKET scope
  109 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET         shift, and go to state 112
    LEFT_SQUARE_BRACKET  shift, and go to state 113
    COLON                shift, and go to state 114
    EQUAL                shift, and go to state 115

    $default  reduce using rule 61 (memberable)


State 48

  160 composited_type: type .

    $default  reduce using rule 160 (composited_type)


State 49

   98 function_def: composited_type . id LEFT_BRACKET arg_list RIGHT_BRACKET scope
   99             | composited_type . id LEFT_BRACKET RIGHT_BRACKET scope
  103 function_decl: composited_type . id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  104              | composited_type . id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  108 variable_decl: composited_type . id
  110              | composited_type . id EQUAL assignable_statement
  113 array_decl: composited_type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  114           | composited_type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  115           | composited_type . id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  116           | composited_type . id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 118


State 50

  152 constant: STRING .

    $default  reduce using rule 152 (constant)


State 51

  154 constant_int: INTEGER .

    $default  reduce using rule 154 (constant_int)


State 52

  151 constant: FLOAT .

    $default  reduce using rule 151 (constant)


State 53

   72 cast: LEFT_BRACKET . composited_type RIGHT_BRACKET id_or_constant

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 119


State 54

   58 unary_plus: PLUS . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 120
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 55

   57 unary_minus: MINUS . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 122
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 56

   76 dereference: ASTERISK . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 123


State 57

   75 address_of: AND . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 124


State 58

  155 constant_bool: TRUE .

    $default  reduce using rule 155 (constant_bool)


State 59

  156 constant_bool: FALSE .

    $default  reduce using rule 156 (constant_bool)


State 60

  153 constant: NULLPTR .

    $default  reduce using rule 153 (constant)


State 61

  119 return_statement: RETURN assignable_statement .

    $default  reduce using rule 119 (return_statement)


State 62

   38 assignable_statement: unary_op .
   94 binop: unary_op . binop_id id_or_constant

    PLUS               shift, and go to state 125
    MINUS              shift, and go to state 126
    ASTERISK           shift, and go to state 127
    FORWARD_SLASH      shift, and go to state 128
    PERCENT            shift, and go to state 129
    EQUAL_EQUAL        shift, and go to state 130
    EXCLAMATION_EQUAL  shift, and go to state 131
    GREATER            shift, and go to state 132
    GREATER_EQUAL      shift, and go to state 133
    LESSER             shift, and go to state 134
    LESSER_EQUAL       shift, and go to state 135
    AND                shift, and go to state 136
    OR                 shift, and go to state 137
    LEFT_SHIFT         shift, and go to state 138
    RIGHT_SHIFT        shift, and go to state 139

    $default  reduce using rule 38 (assignable_statement)

    binop_id  go to state 140


State 63

   55 unary_op: unary_minus .

    $default  reduce using rule 55 (unary_op)


State 64

   56 unary_op: unary_plus .

    $default  reduce using rule 56 (unary_op)


State 65

   39 assignable_statement: binary_op .

    $default  reduce using rule 39 (assignable_statement)


State 66

   54 unary_op: array_index .
   62 memberable: array_index .

    FSTOP     reduce using rule 62 (memberable)
    ARROW     reduce using rule 62 (memberable)
    $default  reduce using rule 54 (unary_op)


State 67

   40 assignable_statement: member_op .
   95 binop: member_op . binop_id member_op
   97      | member_op . binop_id id_or_constant

    PLUS               shift, and go to state 125
    MINUS              shift, and go to state 126
    ASTERISK           shift, and go to state 127
    FORWARD_SLASH      shift, and go to state 128
    PERCENT            shift, and go to state 129
    EQUAL_EQUAL        shift, and go to state 130
    EXCLAMATION_EQUAL  shift, and go to state 131
    GREATER            shift, and go to state 132
    GREATER_EQUAL      shift, and go to state 133
    LESSER             shift, and go to state 134
    LESSER_EQUAL       shift, and go to state 135
    AND                shift, and go to state 136
    OR                 shift, and go to state 137
    LEFT_SHIFT         shift, and go to state 138
    RIGHT_SHIFT        shift, and go to state 139

    $default  reduce using rule 40 (assignable_statement)

    binop_id  go to state 141


State 68

   49 unary_op: cast .

    $default  reduce using rule 49 (unary_op)


State 69

   50 unary_op: increment .

    $default  reduce using rule 50 (unary_op)


State 70

   51 unary_op: decrement .

    $default  reduce using rule 51 (unary_op)


State 71

   52 unary_op: address_of .

    $default  reduce using rule 52 (unary_op)


State 72

   53 unary_op: dereference .

    $default  reduce using rule 53 (unary_op)


State 73

   59 binary_op: binop .

    $default  reduce using rule 59 (binary_op)


State 74

   37 assignable_statement: function_call .

    $default  reduce using rule 37 (assignable_statement)


State 75

   41 assignable_statement: id_or_constant .
   73 increment: id_or_constant . PLUS PLUS
   74 decrement: id_or_constant . MINUS MINUS
   92 binop: id_or_constant . binop_id id_or_constant
   93      | id_or_constant . binop_id unary_op
   96      | id_or_constant . binop_id member_op

    PLUS               shift, and go to state 142
    MINUS              shift, and go to state 143
    ASTERISK           shift, and go to state 127
    FORWARD_SLASH      shift, and go to state 128
    PERCENT            shift, and go to state 129
    EQUAL_EQUAL        shift, and go to state 130
    EXCLAMATION_EQUAL  shift, and go to state 131
    GREATER            shift, and go to state 132
    GREATER_EQUAL      shift, and go to state 133
    LESSER             shift, and go to state 134
    LESSER_EQUAL       shift, and go to state 135
    AND                shift, and go to state 136
    OR                 shift, and go to state 137
    LEFT_SHIFT         shift, and go to state 138
    RIGHT_SHIFT        shift, and go to state 139

    $default  reduce using rule 41 (assignable_statement)

    binop_id  go to state 144


State 76

  145 id_or_constant: constant .

    $default  reduce using rule 145 (id_or_constant)


State 77

  148 constant: constant_int .

    $default  reduce using rule 148 (constant)


State 78

  150 constant: constant_bool .

    $default  reduce using rule 150 (constant)


State 79

  149 constant: constant_enum_value .

    $default  reduce using rule 149 (constant)


State 80

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  106 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  107              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  144 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 145
    LEFT_SQUARE_BRACKET  shift, and go to state 113

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 144 (id_or_constant)


State 81

  157 constant_enum_value: type . COLON COLON id

    COLON  shift, and go to state 146


State 82

  122 cond_block: IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 147
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 83

  125 for_loop: FOR LEFT_BRACKET . statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    statement          go to state 148
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 84

  124 while_loop: WHILE LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 149
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 85

   30 typedef_statement: TYPEDEF TYPE . TYPE

    TYPE  shift, and go to state 150


State 86

   29 alias_statement: ALIAS TYPE . TYPE

    TYPE  shift, and go to state 151


State 87

  138 enum_def: ENUM type . LEFT_BRACE enum_parts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 152


State 88

   34 union_def: UNION type . LEFT_BRACE struct_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 153


State 89

  161 composited_type: MUT composited_type .
  162                | composited_type . ASTERISK
  163                | composited_type . MUT

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    ASTERISK  [reduce using rule 161 (composited_type)]
    MUT       [reduce using rule 161 (composited_type)]
    $default  reduce using rule 161 (composited_type)


State 90

   48 import: IMPORT id .

    $default  reduce using rule 48 (import)


State 91

   31 struct_def: STRUCT . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 154


State 92

   32 struct_def: EXPORT struct_def .

    $default  reduce using rule 32 (struct_def)


State 93

   35 union_def: EXPORT union_def .

    $default  reduce using rule 35 (union_def)


State 94

  102 function_def: EXPORT function_def .

    $default  reduce using rule 102 (function_def)


State 95

  105 function_decl: EXPORT function_decl .

    $default  reduce using rule 105 (function_decl)


State 96

  112 variable_decl: EXPORT variable_decl .

    $default  reduce using rule 112 (variable_decl)


State 97

  135 func_ptr: EXPORT func_ptr .

    $default  reduce using rule 135 (func_ptr)


State 98

  139 enum_def: EXPORT enum_def .

    $default  reduce using rule 139 (enum_def)


State 99

  100 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  101             | id . LEFT_BRACKET RIGHT_BRACKET scope
  109 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET  shift, and go to state 112
    COLON         shift, and go to state 114


State 100

  146 include_or_link: INCLUDE STRING .

    $default  reduce using rule 146 (include_or_link)


State 101

  147 include_or_link: LINK STRING .

    $default  reduce using rule 147 (include_or_link)


State 102

  134 func_ptr: FUNC_PTR type . type LEFT_BRACKET type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type  go to state 155


State 103

   31 struct_def: STRUCT type . LEFT_BRACE struct_list RIGHT_BRACE
   33 struct_decl: STRUCT type .

    LEFT_BRACE  shift, and go to state 156

    $default  reduce using rule 33 (struct_decl)


State 104

    0 $accept: module $end .

    $default  accept


State 105

    3 statements: statements node_setup .

    $default  reduce using rule 3 (statements)


State 106

    5 node_setup: statement SEMICOLON .

    $default  reduce using rule 5 (node_setup)


State 107

   65 member_op: memberable FSTOP . memberable
   66          | memberable FSTOP . member_op

    IDENTIFIER  shift, and go to state 1

    memberable   go to state 157
    array_index  go to state 158
    member_op    go to state 159
    id           go to state 160


State 108

   67 member_op: memberable ARROW . memberable
   68          | memberable ARROW . member_op

    IDENTIFIER  shift, and go to state 1

    memberable   go to state 161
    array_index  go to state 158
    member_op    go to state 162
    id           go to state 160


State 109

   70 variable_assign: array_index EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 163
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 110

   71 variable_assign: member_op EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 164
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 111

  121 if_statement: cond_block ELSE . scope
  123 cond_block: cond_block ELSE . IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACE  shift, and go to state 165
    IF          shift, and go to state 166

    scope  go to state 167


State 112

  100 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  101             | id LEFT_BRACKET . RIGHT_BRACKET scope

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 168
    FSTOP          shift, and go to state 169
    MUT            shift, and go to state 11

    arg_list         go to state 170
    arg_pair         go to state 171
    type             go to state 48
    composited_type  go to state 172


State 113

   63 array_index: id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
   64            | id LEFT_SQUARE_BRACKET . id RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 51

    constant_int  go to state 173
    id            go to state 174


State 114

  109 variable_decl: id COLON . EQUAL assignable_statement

    EQUAL  shift, and go to state 175


State 115

   69 variable_assign: id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 176
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 116

  162 composited_type: composited_type ASTERISK .

    $default  reduce using rule 162 (composited_type)


State 117

  163 composited_type: composited_type MUT .

    $default  reduce using rule 163 (composited_type)


State 118

   98 function_def: composited_type id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
   99             | composited_type id . LEFT_BRACKET RIGHT_BRACKET scope
  103 function_decl: composited_type id . LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  104              | composited_type id . LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  108 variable_decl: composited_type id .
  110              | composited_type id . EQUAL assignable_statement
  113 array_decl: composited_type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  114           | composited_type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  115           | composited_type id . MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  116           | composited_type id . MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACKET         shift, and go to state 177
    LEFT_SQUARE_BRACKET  shift, and go to state 178
    EQUAL                shift, and go to state 179
    MUT                  shift, and go to state 180

    MUT       [reduce using rule 108 (variable_decl)]
    $default  reduce using rule 108 (variable_decl)


State 119

   72 cast: LEFT_BRACKET composited_type . RIGHT_BRACKET id_or_constant
  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT

    RIGHT_BRACKET  shift, and go to state 181
    ASTERISK       shift, and go to state 116
    MUT            shift, and go to state 117


State 120

   58 unary_plus: PLUS id_or_constant .

    $default  reduce using rule 58 (unary_plus)


State 121

  144 id_or_constant: id .

    $default  reduce using rule 144 (id_or_constant)


State 122

   57 unary_minus: MINUS id_or_constant .

    $default  reduce using rule 57 (unary_minus)


State 123

   76 dereference: ASTERISK id .

    $default  reduce using rule 76 (dereference)


State 124

   75 address_of: AND id .

    $default  reduce using rule 75 (address_of)


State 125

   77 binop_id: PLUS .

    $default  reduce using rule 77 (binop_id)


State 126

   78 binop_id: MINUS .

    $default  reduce using rule 78 (binop_id)


State 127

   79 binop_id: ASTERISK .

    $default  reduce using rule 79 (binop_id)


State 128

   80 binop_id: FORWARD_SLASH .

    $default  reduce using rule 80 (binop_id)


State 129

   91 binop_id: PERCENT .

    $default  reduce using rule 91 (binop_id)


State 130

   81 binop_id: EQUAL_EQUAL .

    $default  reduce using rule 81 (binop_id)


State 131

   82 binop_id: EXCLAMATION_EQUAL .

    $default  reduce using rule 82 (binop_id)


State 132

   84 binop_id: GREATER .

    $default  reduce using rule 84 (binop_id)


State 133

   86 binop_id: GREATER_EQUAL .

    $default  reduce using rule 86 (binop_id)


State 134

   83 binop_id: LESSER .

    $default  reduce using rule 83 (binop_id)


State 135

   85 binop_id: LESSER_EQUAL .

    $default  reduce using rule 85 (binop_id)


State 136

   87 binop_id: AND .

    $default  reduce using rule 87 (binop_id)


State 137

   88 binop_id: OR .

    $default  reduce using rule 88 (binop_id)


State 138

   89 binop_id: LEFT_SHIFT .

    $default  reduce using rule 89 (binop_id)


State 139

   90 binop_id: RIGHT_SHIFT .

    $default  reduce using rule 90 (binop_id)


State 140

   94 binop: unary_op binop_id . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 182
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 141

   95 binop: member_op binop_id . member_op
   97      | member_op binop_id . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    memberable           go to state 31
    array_index          go to state 158
    member_op            go to state 183
    id_or_constant       go to state 184
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 185
    type                 go to state 81


State 142

   73 increment: id_or_constant PLUS . PLUS
   77 binop_id: PLUS .

    PLUS  shift, and go to state 186

    PLUS      [reduce using rule 77 (binop_id)]
    $default  reduce using rule 77 (binop_id)


State 143

   74 decrement: id_or_constant MINUS . MINUS
   78 binop_id: MINUS .

    MINUS  shift, and go to state 187

    MINUS     [reduce using rule 78 (binop_id)]
    $default  reduce using rule 78 (binop_id)


State 144

   92 binop: id_or_constant binop_id . id_or_constant
   93      | id_or_constant binop_id . unary_op
   96      | id_or_constant binop_id . member_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    unary_op             go to state 188
    unary_minus          go to state 63
    unary_plus           go to state 64
    memberable           go to state 31
    array_index          go to state 66
    member_op            go to state 189
    cast                 go to state 68
    increment            go to state 69
    decrement            go to state 70
    address_of           go to state 71
    dereference          go to state 72
    id_or_constant       go to state 190
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 185
    type                 go to state 81


State 145

  106 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  107              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 50
    INTEGER        shift, and go to state 51
    FLOAT          shift, and go to state 52
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 53
    RIGHT_BRACKET  shift, and go to state 191
    PLUS           shift, and go to state 54
    MINUS          shift, and go to state 55
    ASTERISK       shift, and go to state 56
    AND            shift, and go to state 57
    TRUE           shift, and go to state 58
    FALSE          shift, and go to state 59
    NULLPTR        shift, and go to state 60

    assignable_statement  go to state 192
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    statement_list        go to state 193
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 146

  157 constant_enum_value: type COLON . COLON id

    COLON  shift, and go to state 194


State 147

  122 cond_block: IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 195


State 148

  125 for_loop: FOR LEFT_BRACKET statement . SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 196


State 149

  124 while_loop: WHILE LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 197


State 150

   30 typedef_statement: TYPEDEF TYPE TYPE .

    $default  reduce using rule 30 (typedef_statement)


State 151

   29 alias_statement: ALIAS TYPE TYPE .

    $default  reduce using rule 29 (alias_statement)


State 152

  138 enum_def: ENUM type LEFT_BRACE . enum_parts RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1

    enum_parts  go to state 198
    enum_part   go to state 199
    id          go to state 200


State 153

   34 union_def: UNION type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    struct_list      go to state 201
    struct_pair      go to state 202
    type             go to state 48
    composited_type  go to state 203


State 154

   31 struct_def: STRUCT type . LEFT_BRACE struct_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 156


State 155

  134 func_ptr: FUNC_PTR type type . LEFT_BRACKET type_list RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 204


State 156

   31 struct_def: STRUCT type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    struct_list      go to state 205
    struct_pair      go to state 202
    type             go to state 48
    composited_type  go to state 203


State 157

   65 member_op: memberable . FSTOP memberable
   65          | memberable FSTOP memberable .
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108

    $default  reduce using rule 65 (member_op)


State 158

   62 memberable: array_index .

    $default  reduce using rule 62 (memberable)


State 159

   66 member_op: memberable FSTOP member_op .

    $default  reduce using rule 66 (member_op)


State 160

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 113

    $default  reduce using rule 61 (memberable)


State 161

   65 member_op: memberable . FSTOP memberable
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   67          | memberable ARROW memberable .
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108

    $default  reduce using rule 67 (member_op)


State 162

   68 member_op: memberable ARROW member_op .

    $default  reduce using rule 68 (member_op)


State 163

   70 variable_assign: array_index EQUAL assignable_statement .

    $default  reduce using rule 70 (variable_assign)


State 164

   71 variable_assign: member_op EQUAL assignable_statement .

    $default  reduce using rule 71 (variable_assign)


State 165

   46 scope: LEFT_BRACE . semicoloned_statements RIGHT_BRACE
   47      | LEFT_BRACE . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    RIGHT_BRACE   shift, and go to state 206
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 207
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    MUT           shift, and go to state 11
    IMPORT        shift, and go to state 12
    EXPORT        shift, and go to state 13
    INCLUDE       shift, and go to state 14
    LINK          shift, and go to state 15
    FUNC_PTR      shift, and go to state 16
    NULLPTR       shift, and go to state 60
    STRUCT        shift, and go to state 17

    semicoloned_statements  go to state 208
    semicoloned_statement   go to state 209
    statement               go to state 210
    alias_statement         go to state 22
    typedef_statement       go to state 23
    struct_def              go to state 24
    struct_decl             go to state 25
    union_def               go to state 26
    defer_statement         go to state 211
    assignable_statement    go to state 212
    flow_control            go to state 213
    loop                    go to state 28
    import                  go to state 29
    unary_op                go to state 62
    unary_minus             go to state 63
    unary_plus              go to state 64
    binary_op               go to state 65
    assign_op               go to state 30
    memberable              go to state 31
    array_index             go to state 214
    member_op               go to state 215
    variable_assign         go to state 34
    cast                    go to state 68
    increment               go to state 69
    decrement               go to state 70
    address_of              go to state 71
    dereference             go to state 72
    binop                   go to state 73
    function_def            go to state 216
    function_decl           go to state 36
    function_call           go to state 74
    variable_decl           go to state 37
    array_decl              go to state 38
    return_statement        go to state 39
    if_statement            go to state 40
    cond_block              go to state 41
    while_loop              go to state 42
    for_loop                go to state 43
    func_ptr                go to state 44
    enum_def                go to state 45
    id_or_constant          go to state 75
    include_or_link         go to state 46
    constant                go to state 76
    constant_int            go to state 77
    constant_bool           go to state 78
    constant_enum_value     go to state 79
    id                      go to state 217
    type                    go to state 218
    composited_type         go to state 49


State 166

  123 cond_block: cond_block ELSE IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 219


State 167

  121 if_statement: cond_block ELSE scope .

    $default  reduce using rule 121 (if_statement)


State 168

  101 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 220


State 169

  137 arg_pair: FSTOP . FSTOP FSTOP

    FSTOP  shift, and go to state 221


State 170

  100 function_def: id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  130 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 222
    COMMA          shift, and go to state 223


State 171

  131 arg_list: arg_pair .

    $default  reduce using rule 131 (arg_list)


State 172

  136 arg_pair: composited_type . id
  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 224


State 173

   63 array_index: id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 225


State 174

   64 array_index: id LEFT_SQUARE_BRACKET id . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 226


State 175

  109 variable_decl: id COLON EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 227
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 176

   69 variable_assign: id EQUAL assignable_statement .

    $default  reduce using rule 69 (variable_assign)


State 177

   98 function_def: composited_type id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
   99             | composited_type id LEFT_BRACKET . RIGHT_BRACKET scope
  103 function_decl: composited_type id LEFT_BRACKET . RIGHT_BRACKET SEMICOLON
  104              | composited_type id LEFT_BRACKET . arg_list RIGHT_BRACKET SEMICOLON

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 228
    FSTOP          shift, and go to state 169
    MUT            shift, and go to state 11

    arg_list         go to state 229
    arg_pair         go to state 171
    type             go to state 48
    composited_type  go to state 172


State 178

  113 array_decl: composited_type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
  114           | composited_type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    INTEGER  shift, and go to state 51

    constant_int  go to state 230


State 179

  110 variable_decl: composited_type id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 231
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 180

  115 array_decl: composited_type id MUT . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  116           | composited_type id MUT . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    LEFT_SQUARE_BRACKET  shift, and go to state 232


State 181

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 233
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 182

   94 binop: unary_op binop_id id_or_constant .

    $default  reduce using rule 94 (binop)


State 183

   95 binop: member_op binop_id member_op .

    $default  reduce using rule 95 (binop)


State 184

   97 binop: member_op binop_id id_or_constant .

    $default  reduce using rule 97 (binop)


State 185

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  144 id_or_constant: id .

    LEFT_SQUARE_BRACKET  shift, and go to state 113

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 144 (id_or_constant)


State 186

   73 increment: id_or_constant PLUS PLUS .

    $default  reduce using rule 73 (increment)


State 187

   74 decrement: id_or_constant MINUS MINUS .

    $default  reduce using rule 74 (decrement)


State 188

   93 binop: id_or_constant binop_id unary_op .

    $default  reduce using rule 93 (binop)


State 189

   96 binop: id_or_constant binop_id member_op .

    $default  reduce using rule 96 (binop)


State 190

   73 increment: id_or_constant . PLUS PLUS
   74 decrement: id_or_constant . MINUS MINUS
   92 binop: id_or_constant binop_id id_or_constant .

    PLUS   shift, and go to state 234
    MINUS  shift, and go to state 235

    $default  reduce using rule 92 (binop)


State 191

  106 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 106 (function_call)


State 192

  133 statement_list: assignable_statement .

    $default  reduce using rule 133 (statement_list)


State 193

  107 function_call: id LEFT_BRACKET statement_list . RIGHT_BRACKET
  132 statement_list: statement_list . COMMA assignable_statement

    RIGHT_BRACKET  shift, and go to state 236
    COMMA          shift, and go to state 237


State 194

  157 constant_enum_value: type COLON COLON . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 238


State 195

  122 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 239


State 196

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON . assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 240
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 197

  124 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 241


State 198

  138 enum_def: ENUM type LEFT_BRACE enum_parts . RIGHT_BRACE
  141 enum_parts: enum_parts . COMMA enum_part

    RIGHT_BRACE  shift, and go to state 242
    COMMA        shift, and go to state 243


State 199

  140 enum_parts: enum_part .

    $default  reduce using rule 140 (enum_parts)


State 200

  142 enum_part: id .
  143          | id . EQUAL constant_int

    EQUAL  shift, and go to state 244

    $default  reduce using rule 142 (enum_part)


State 201

   34 union_def: UNION type LEFT_BRACE struct_list . RIGHT_BRACE
  126 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 245
    MUT          shift, and go to state 11

    struct_pair      go to state 246
    type             go to state 48
    composited_type  go to state 203


State 202

  127 struct_list: struct_pair .

    $default  reduce using rule 127 (struct_list)


State 203

  128 struct_pair: composited_type . id SEMICOLON
  129            | composited_type . id EQUAL assignable_statement SEMICOLON
  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 247


State 204

  134 func_ptr: FUNC_PTR type type LEFT_BRACKET . type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 248
    type_list        go to state 249


State 205

   31 struct_def: STRUCT type LEFT_BRACE struct_list . RIGHT_BRACE
  126 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 250
    MUT          shift, and go to state 11

    struct_pair      go to state 246
    type             go to state 48
    composited_type  go to state 203


State 206

   47 scope: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 47 (scope)


State 207

   36 defer_statement: DEFER . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 251
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 208

    7 semicoloned_statements: semicoloned_statements . semicoloned_statement
   46 scope: LEFT_BRACE semicoloned_statements . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    RIGHT_BRACE   shift, and go to state 252
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 207
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    MUT           shift, and go to state 11
    IMPORT        shift, and go to state 12
    EXPORT        shift, and go to state 13
    INCLUDE       shift, and go to state 14
    LINK          shift, and go to state 15
    FUNC_PTR      shift, and go to state 16
    NULLPTR       shift, and go to state 60
    STRUCT        shift, and go to state 17

    semicoloned_statement  go to state 253
    statement              go to state 210
    alias_statement        go to state 22
    typedef_statement      go to state 23
    struct_def             go to state 24
    struct_decl            go to state 25
    union_def              go to state 26
    defer_statement        go to state 211
    assignable_statement   go to state 212
    flow_control           go to state 213
    loop                   go to state 28
    import                 go to state 29
    unary_op               go to state 62
    unary_minus            go to state 63
    unary_plus             go to state 64
    binary_op              go to state 65
    assign_op              go to state 30
    memberable             go to state 31
    array_index            go to state 214
    member_op              go to state 215
    variable_assign        go to state 34
    cast                   go to state 68
    increment              go to state 69
    decrement              go to state 70
    address_of             go to state 71
    dereference            go to state 72
    binop                  go to state 73
    function_def           go to state 216
    function_decl          go to state 36
    function_call          go to state 74
    variable_decl          go to state 37
    array_decl             go to state 38
    return_statement       go to state 39
    if_statement           go to state 40
    cond_block             go to state 41
    while_loop             go to state 42
    for_loop               go to state 43
    func_ptr               go to state 44
    enum_def               go to state 45
    id_or_constant         go to state 75
    include_or_link        go to state 46
    constant               go to state 76
    constant_int           go to state 77
    constant_bool          go to state 78
    constant_enum_value    go to state 79
    id                     go to state 217
    type                   go to state 218
    composited_type        go to state 49


State 209

    6 semicoloned_statements: semicoloned_statement .

    $default  reduce using rule 6 (semicoloned_statements)


State 210

    8 semicoloned_statement: statement . SEMICOLON

    SEMICOLON  shift, and go to state 254


State 211

   11 semicoloned_statement: defer_statement . SEMICOLON

    SEMICOLON  shift, and go to state 255


State 212

    9 semicoloned_statement: assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 256


State 213

   10 semicoloned_statement: flow_control .
   26 statement: flow_control .

    SEMICOLON  reduce using rule 26 (statement)
    $default   reduce using rule 10 (semicoloned_statement)


State 214

   54 unary_op: array_index .
   62 memberable: array_index .
   70 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 109

    FSTOP     reduce using rule 62 (memberable)
    ARROW     reduce using rule 62 (memberable)
    $default  reduce using rule 54 (unary_op)


State 215

   40 assignable_statement: member_op .
   71 variable_assign: member_op . EQUAL assignable_statement
   95 binop: member_op . binop_id member_op
   97      | member_op . binop_id id_or_constant

    PLUS               shift, and go to state 125
    MINUS              shift, and go to state 126
    ASTERISK           shift, and go to state 127
    FORWARD_SLASH      shift, and go to state 128
    PERCENT            shift, and go to state 129
    EQUAL              shift, and go to state 110
    EQUAL_EQUAL        shift, and go to state 130
    EXCLAMATION_EQUAL  shift, and go to state 131
    GREATER            shift, and go to state 132
    GREATER_EQUAL      shift, and go to state 133
    LESSER             shift, and go to state 134
    LESSER_EQUAL       shift, and go to state 135
    AND                shift, and go to state 136
    OR                 shift, and go to state 137
    LEFT_SHIFT         shift, and go to state 138
    RIGHT_SHIFT        shift, and go to state 139

    $default  reduce using rule 40 (assignable_statement)

    binop_id  go to state 141


State 216

   12 semicoloned_statement: function_def .
   27 statement: function_def .

    SEMICOLON  reduce using rule 27 (statement)
    $default   reduce using rule 12 (semicoloned_statement)


State 217

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
   69 variable_assign: id . EQUAL assignable_statement
  100 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  101             | id . LEFT_BRACKET RIGHT_BRACKET scope
  106 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  107              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  109 variable_decl: id . COLON EQUAL assignable_statement
  144 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 257
    LEFT_SQUARE_BRACKET  shift, and go to state 113
    COLON                shift, and go to state 114
    EQUAL                shift, and go to state 115

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 144 (id_or_constant)


State 218

  157 constant_enum_value: type . COLON COLON id
  160 composited_type: type .

    COLON  shift, and go to state 146

    $default  reduce using rule 160 (composited_type)


State 219

  123 cond_block: cond_block ELSE IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 258
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 220

  101 function_def: id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 101 (function_def)


State 221

  137 arg_pair: FSTOP FSTOP . FSTOP

    FSTOP  shift, and go to state 259


State 222

  100 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 260


State 223

  130 arg_list: arg_list COMMA . arg_pair

    TYPE   shift, and go to state 2
    FSTOP  shift, and go to state 169
    MUT    shift, and go to state 11

    arg_pair         go to state 261
    type             go to state 48
    composited_type  go to state 172


State 224

  136 arg_pair: composited_type id .

    $default  reduce using rule 136 (arg_pair)


State 225

   63 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 63 (array_index)


State 226

   64 array_index: id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 64 (array_index)


State 227

  109 variable_decl: id COLON EQUAL assignable_statement .

    $default  reduce using rule 109 (variable_decl)


State 228

   99 function_def: composited_type id LEFT_BRACKET RIGHT_BRACKET . scope
  103 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 165
    SEMICOLON   shift, and go to state 262

    scope  go to state 263


State 229

   98 function_def: composited_type id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  104 function_decl: composited_type id LEFT_BRACKET arg_list . RIGHT_BRACKET SEMICOLON
  130 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 264
    COMMA          shift, and go to state 223


State 230

  113 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET
  114           | composited_type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    RIGHT_SQUARE_BRACKET  shift, and go to state 265


State 231

  110 variable_decl: composited_type id EQUAL assignable_statement .

    $default  reduce using rule 110 (variable_decl)


State 232

  115 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
  116           | composited_type id MUT LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    INTEGER  shift, and go to state 51

    constant_int  go to state 266


State 233

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET id_or_constant .

    $default  reduce using rule 72 (cast)


State 234

   73 increment: id_or_constant PLUS . PLUS

    PLUS  shift, and go to state 186


State 235

   74 decrement: id_or_constant MINUS . MINUS

    MINUS  shift, and go to state 187


State 236

  107 function_call: id LEFT_BRACKET statement_list RIGHT_BRACKET .

    $default  reduce using rule 107 (function_call)


State 237

  132 statement_list: statement_list COMMA . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 267
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 238

  157 constant_enum_value: type COLON COLON id .

    $default  reduce using rule 157 (constant_enum_value)


State 239

  122 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 122 (cond_block)


State 240

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement . SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 268


State 241

  124 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 124 (while_loop)


State 242

  138 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE .

    $default  reduce using rule 138 (enum_def)


State 243

  141 enum_parts: enum_parts COMMA . enum_part

    IDENTIFIER  shift, and go to state 1

    enum_part  go to state 269
    id         go to state 200


State 244

  143 enum_part: id EQUAL . constant_int

    INTEGER  shift, and go to state 51

    constant_int  go to state 270


State 245

   34 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 34 (union_def)


State 246

  126 struct_list: struct_list struct_pair .

    $default  reduce using rule 126 (struct_list)


State 247

  128 struct_pair: composited_type id . SEMICOLON
  129            | composited_type id . EQUAL assignable_statement SEMICOLON

    SEMICOLON  shift, and go to state 271
    EQUAL      shift, and go to state 272


State 248

  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT
  164 type_list: composited_type .

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    $default  reduce using rule 164 (type_list)


State 249

  134 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list . RIGHT_BRACKET
  165 type_list: type_list . COMMA composited_type

    RIGHT_BRACKET  shift, and go to state 273
    COMMA          shift, and go to state 274


State 250

   31 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 31 (struct_def)


State 251

   36 defer_statement: DEFER assignable_statement .

    $default  reduce using rule 36 (defer_statement)


State 252

   46 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE .

    $default  reduce using rule 46 (scope)


State 253

    7 semicoloned_statements: semicoloned_statements semicoloned_statement .

    $default  reduce using rule 7 (semicoloned_statements)


State 254

    8 semicoloned_statement: statement SEMICOLON .

    $default  reduce using rule 8 (semicoloned_statement)


State 255

   11 semicoloned_statement: defer_statement SEMICOLON .

    $default  reduce using rule 11 (semicoloned_statement)


State 256

    9 semicoloned_statement: assignable_statement SEMICOLON .

    $default  reduce using rule 9 (semicoloned_statement)


State 257

  100 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  101             | id LEFT_BRACKET . RIGHT_BRACKET scope
  106 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  107              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 50
    INTEGER        shift, and go to state 51
    FLOAT          shift, and go to state 52
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 53
    RIGHT_BRACKET  shift, and go to state 275
    FSTOP          shift, and go to state 169
    PLUS           shift, and go to state 54
    MINUS          shift, and go to state 55
    ASTERISK       shift, and go to state 56
    AND            shift, and go to state 57
    TRUE           shift, and go to state 58
    FALSE          shift, and go to state 59
    MUT            shift, and go to state 11
    NULLPTR        shift, and go to state 60

    assignable_statement  go to state 192
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    arg_list              go to state 170
    statement_list        go to state 193
    arg_pair              go to state 171
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 218
    composited_type       go to state 172


State 258

  123 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 276


State 259

  137 arg_pair: FSTOP FSTOP FSTOP .

    $default  reduce using rule 137 (arg_pair)


State 260

  100 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 100 (function_def)


State 261

  130 arg_list: arg_list COMMA arg_pair .

    $default  reduce using rule 130 (arg_list)


State 262

  103 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 103 (function_decl)


State 263

   99 function_def: composited_type id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 99 (function_def)


State 264

   98 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET . scope
  104 function_decl: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 165
    SEMICOLON   shift, and go to state 277

    scope  go to state 278


State 265

  113 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .
  114           | composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET . EQUAL LEFT_BRACE init_list RIGHT_BRACE

    EQUAL  shift, and go to state 279

    $default  reduce using rule 113 (array_decl)


State 266

  115 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET
  116           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    RIGHT_SQUARE_BRACKET  shift, and go to state 280


State 267

  132 statement_list: statement_list COMMA assignable_statement .

    $default  reduce using rule 132 (statement_list)


State 268

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 281
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 269

  141 enum_parts: enum_parts COMMA enum_part .

    $default  reduce using rule 141 (enum_parts)


State 270

  143 enum_part: id EQUAL constant_int .

    $default  reduce using rule 143 (enum_part)


State 271

  128 struct_pair: composited_type id SEMICOLON .

    $default  reduce using rule 128 (struct_pair)


State 272

  129 struct_pair: composited_type id EQUAL . assignable_statement SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 282
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 273

  134 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET .

    $default  reduce using rule 134 (func_ptr)


State 274

  165 type_list: type_list COMMA . composited_type

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 283


State 275

  101 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope
  106 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    LEFT_BRACE  shift, and go to state 165

    $default  reduce using rule 106 (function_call)

    scope  go to state 220


State 276

  123 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 284


State 277

  104 function_decl: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 104 (function_decl)


State 278

   98 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 98 (function_def)


State 279

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL . LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 285


State 280

  115 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .
  116           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET . EQUAL LEFT_BRACE init_list RIGHT_BRACE

    EQUAL  shift, and go to state 286

    $default  reduce using rule 115 (array_decl)


State 281

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 287


State 282

  129 struct_pair: composited_type id EQUAL assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 288


State 283

  162 composited_type: composited_type . ASTERISK
  163                | composited_type . MUT
  165 type_list: type_list COMMA composited_type .

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    $default  reduce using rule 165 (type_list)


State 284

  123 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 123 (cond_block)


State 285

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE . init_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    init_list            go to state 289
    id_or_constant       go to state 290
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 286

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL . LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 291


State 287

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 165

    scope  go to state 292


State 288

  129 struct_pair: composited_type id EQUAL assignable_statement SEMICOLON .

    $default  reduce using rule 129 (struct_pair)


State 289

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list . RIGHT_BRACE
  118 init_list: init_list . COMMA id_or_constant

    RIGHT_BRACE  shift, and go to state 293
    COMMA        shift, and go to state 294


State 290

  117 init_list: id_or_constant .

    $default  reduce using rule 117 (init_list)


State 291

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE . init_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    init_list            go to state 295
    id_or_constant       go to state 290
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 292

  125 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 125 (for_loop)


State 293

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE .

    $default  reduce using rule 114 (array_decl)


State 294

  118 init_list: init_list COMMA . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 296
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 295

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list . RIGHT_BRACE
  118 init_list: init_list . COMMA id_or_constant

    RIGHT_BRACE  shift, and go to state 297
    COMMA        shift, and go to state 294


State 296

  118 init_list: init_list COMMA id_or_constant .

    $default  reduce using rule 118 (init_list)


State 297

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE .

    $default  reduce using rule 116 (array_decl)
