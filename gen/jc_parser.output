Terminals unused in grammar

   EXCLAMATION
   AND_AND
   OR_OR
   AUTO
   EXTERN
   UNKNOWN


Rules useless in parser due to conflicts

  166 type_list: type
  167          | type_list COMMA type


State 254 conflicts: 2 reduce/reduce
State 287 conflicts: 2 reduce/reduce


Grammar

    0 $accept: module $end

    1 module: statements

    2 statements: node_setup
    3           | statements node_setup

    4 node_setup: statement
    5           | statement SEMICOLON

    6 semicoloned_statements: semicoloned_statement
    7                       | semicoloned_statements semicoloned_statement

    8 semicoloned_statement: statement SEMICOLON
    9                      | assignable_statement SEMICOLON
   10                      | flow_control
   11                      | defer_statement SEMICOLON
   12                      | function_def

   13 statement: return_statement
   14          | function_decl
   15          | variable_decl
   16          | assign_op
   17          | alias_statement
   18          | typedef_statement
   19          | struct_def
   20          | import
   21          | include_or_link
   22          | func_ptr
   23          | enum_def
   24          | union_def
   25          | flow_control
   26          | function_def

   27 alias_statement: ALIAS TYPE TYPE

   28 typedef_statement: TYPEDEF TYPE TYPE

   29 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE

   30 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE

   31 defer_statement: DEFER assignable_statement

   32 assignable_statement: function_call
   33                     | unary_op
   34                     | binary_op
   35                     | member_op
   36                     | id_or_constant

   37 flow_control: if_statement
   38             | loop

   39 loop: while_loop
   40     | for_loop

   41 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE
   42      | LEFT_BRACE RIGHT_BRACE

   43 import: IMPORT id

   44 unary_op: cast
   45         | increment
   46         | decrement
   47         | address_of
   48         | dereference
   49         | array_index

   50 binary_op: add
   51          | subtract
   52          | multiply
   53          | divide
   54          | equality
   55          | inequality
   56          | lesser
   57          | greater
   58          | lesser_or_equal
   59          | greater_or_equal
   60          | bitwise_and
   61          | bitwise_or
   62          | bitwise_left_shift
   63          | bitwise_right_shift

   64 assign_op: variable_assign

   65 member_op: id FSTOP id
   66          | id ARROW id

   67 variable_assign: id EQUAL assignable_statement
   68                | array_index EQUAL assignable_statement
   69                | member_op EQUAL assignable_statement

   70 cast: LEFT_BRACKET type RIGHT_BRACKET id_or_constant

   71 increment: id_or_constant PLUS PLUS

   72 decrement: id_or_constant MINUS MINUS

   73 address_of: AND id

   74 dereference: ASTERISK id

   75 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   76            | id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET

   77 add: id_or_constant PLUS id_or_constant
   78    | id_or_constant PLUS unary_op

   79 subtract: id_or_constant MINUS id_or_constant
   80         | id_or_constant MINUS unary_op

   81 multiply: id_or_constant ASTERISK id_or_constant
   82         | id_or_constant ASTERISK unary_op

   83 divide: id_or_constant FORWARD_SLASH id_or_constant
   84       | id_or_constant FORWARD_SLASH unary_op

   85 equality: id_or_constant EQUAL_EQUAL id_or_constant
   86         | id_or_constant EQUAL_EQUAL unary_op

   87 inequality: id_or_constant EXCLAMATION_EQUAL id_or_constant
   88           | id_or_constant EXCLAMATION_EQUAL unary_op

   89 lesser: id_or_constant LESSER id_or_constant
   90       | id_or_constant LESSER unary_op

   91 greater: id_or_constant GREATER id_or_constant
   92        | id_or_constant GREATER unary_op

   93 lesser_or_equal: id_or_constant LESSER_EQUAL id_or_constant
   94                | id_or_constant LESSER_EQUAL unary_op

   95 greater_or_equal: id_or_constant GREATER_EQUAL id_or_constant
   96                 | id_or_constant GREATER_EQUAL unary_op

   97 bitwise_and: id_or_constant AND id_or_constant
   98            | id_or_constant AND unary_op

   99 bitwise_or: id_or_constant OR id_or_constant
  100           | id_or_constant OR unary_op

  101 bitwise_left_shift: id_or_constant LEFT_SHIFT id_or_constant
  102                   | id_or_constant LEFT_SHIFT unary_op

  103 bitwise_right_shift: id_or_constant RIGHT_SHIFT id_or_constant
  104                    | id_or_constant RIGHT_SHIFT unary_op

  105 function_def: type id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  106             | type id LEFT_BRACKET RIGHT_BRACKET scope
  107             | id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  108             | id LEFT_BRACKET RIGHT_BRACKET scope
  109             | EXPORT function_def

  110 function_decl: type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  111              | type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  112              | EXPORT function_decl

  113 function_call: id LEFT_BRACKET RIGHT_BRACKET
  114              | id LEFT_BRACKET statement_list RIGHT_BRACKET

  115 variable_decl: type id
  116              | id COLON EQUAL assignable_statement
  117              | type id EQUAL assignable_statement
  118              | array_decl
  119              | EXPORT variable_decl

  120 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  121           | type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

  122 init_list: id_or_constant
  123          | init_list COMMA id_or_constant

  124 return_statement: RETURN assignable_statement

  125 if_statement: cond_block
  126             | cond_block ELSE scope

  127 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope
  128           | cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  129 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

  131 struct_list: struct_list struct_pair
  132            | struct_pair

  133 struct_pair: type id SEMICOLON
  134            | type id EQUAL assignable_statement SEMICOLON

  135 arg_list: arg_list COMMA arg_pair
  136         | arg_pair

  137 statement_list: statement_list COMMA assignable_statement
  138               | assignable_statement

  139 type_list: type
  140          | type_list COMMA type

  141 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET

  142 arg_pair: type id
  143         | FSTOP FSTOP FSTOP

  144 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE

  145 enum_parts: enum_part
  146           | enum_parts COMMA enum_part

  147 enum_part: id
  148          | id EQUAL constant_int

  149 id_or_constant: id
  150               | constant

  151 include_or_link: INCLUDE STRING
  152                | LINK STRING

  153 constant: constant_int
  154         | constant_enum_value
  155         | constant_bool
  156         | FLOAT
  157         | STRING
  158         | NULLPTR

  159 constant_int: INTEGER

  160 constant_bool: TRUE
  161              | FALSE

  162 constant_enum_value: type COLON COLON id

  163 id: IDENTIFIER

  164 type: TYPE
  165     | type ASTERISK

  166 type_list: type
  167          | type_list COMMA type


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 163
STRING (259) 151 152 157
INTEGER (260) 159
FLOAT (261) 156
TYPE (262) 27 28 164
LEFT_BRACKET (263) 70 105 106 107 108 110 111 113 114 127 128 129 130
    141
RIGHT_BRACKET (264) 70 105 106 107 108 110 111 113 114 127 128 129
    130 141
LEFT_BRACE (265) 29 30 41 42 121 144
RIGHT_BRACE (266) 29 30 41 42 121 144
LEFT_SQUARE_BRACKET (267) 75 76 120 121
RIGHT_SQUARE_BRACKET (268) 75 76 120 121
COMMA (269) 123 135 137 140 146 167
FSTOP (270) 65 143
SEMICOLON (271) 5 8 9 11 110 111 130 133 134
COLON (272) 116 162
PLUS (273) 71 77 78
MINUS (274) 72 79 80
ASTERISK (275) 74 81 82 165
FORWARD_SLASH (276) 83 84
EQUAL (277) 67 68 69 116 117 121 134 148
EQUAL_EQUAL (278) 85 86
EXCLAMATION (279)
EXCLAMATION_EQUAL (280) 87 88
GREATER (281) 91 92
GREATER_EQUAL (282) 95 96
LESSER (283) 89 90
LESSER_EQUAL (284) 93 94
AND (285) 73 97 98
AND_AND (286)
OR (287) 99 100
OR_OR (288)
LEFT_SHIFT (289) 101 102
RIGHT_SHIFT (290) 103 104
RETURN (291) 124
DEFER (292) 31
IF (293) 127 128
ELSE (294) 126 128
FOR (295) 130
WHILE (296) 129
TYPEDEF (297) 28
ALIAS (298) 27
AUTO (299)
ENUM (300) 144
UNION (301) 30
TRUE (302) 160
FALSE (303) 161
EXTERN (304)
IMPORT (305) 43
EXPORT (306) 109 112 119
INCLUDE (307) 151
LINK (308) 152
FUNC_PTR (309) 141
NULLPTR (310) 158
STRUCT (311) 29
ARROW (312) 66
UNKNOWN (313)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
module (60)
    on left: 1, on right: 0
statements (61)
    on left: 2 3, on right: 1 3
node_setup (62)
    on left: 4 5, on right: 2 3
semicoloned_statements (63)
    on left: 6 7, on right: 7 41
semicoloned_statement (64)
    on left: 8 9 10 11 12, on right: 6 7
statement (65)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26, on right: 4
    5 8 130
alias_statement (66)
    on left: 27, on right: 17
typedef_statement (67)
    on left: 28, on right: 18
struct_def (68)
    on left: 29, on right: 19
union_def (69)
    on left: 30, on right: 24
defer_statement (70)
    on left: 31, on right: 11
assignable_statement (71)
    on left: 32 33 34 35 36, on right: 9 31 67 68 69 116 117 124 127
    128 129 130 134 137 138
flow_control (72)
    on left: 37 38, on right: 10 25
loop (73)
    on left: 39 40, on right: 38
scope (74)
    on left: 41 42, on right: 105 106 107 108 126 127 128 129 130
import (75)
    on left: 43, on right: 20
unary_op (76)
    on left: 44 45 46 47 48 49, on right: 33 78 80 82 84 86 88 90 92
    94 96 98 100 102 104
binary_op (77)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63, on right: 34
assign_op (78)
    on left: 64, on right: 16
member_op (79)
    on left: 65 66, on right: 35 69
variable_assign (80)
    on left: 67 68 69, on right: 64
cast (81)
    on left: 70, on right: 44
increment (82)
    on left: 71, on right: 45
decrement (83)
    on left: 72, on right: 46
address_of (84)
    on left: 73, on right: 47
dereference (85)
    on left: 74, on right: 48
array_index (86)
    on left: 75 76, on right: 49 68
add (87)
    on left: 77 78, on right: 50
subtract (88)
    on left: 79 80, on right: 51
multiply (89)
    on left: 81 82, on right: 52
divide (90)
    on left: 83 84, on right: 53
equality (91)
    on left: 85 86, on right: 54
inequality (92)
    on left: 87 88, on right: 55
lesser (93)
    on left: 89 90, on right: 56
greater (94)
    on left: 91 92, on right: 57
lesser_or_equal (95)
    on left: 93 94, on right: 58
greater_or_equal (96)
    on left: 95 96, on right: 59
bitwise_and (97)
    on left: 97 98, on right: 60
bitwise_or (98)
    on left: 99 100, on right: 61
bitwise_left_shift (99)
    on left: 101 102, on right: 62
bitwise_right_shift (100)
    on left: 103 104, on right: 63
function_def (101)
    on left: 105 106 107 108 109, on right: 12 26 109
function_decl (102)
    on left: 110 111 112, on right: 14 112
function_call (103)
    on left: 113 114, on right: 32
variable_decl (104)
    on left: 115 116 117 118 119, on right: 15 119
array_decl (105)
    on left: 120 121, on right: 118
init_list (106)
    on left: 122 123, on right: 121 123
return_statement (107)
    on left: 124, on right: 13
if_statement (108)
    on left: 125 126, on right: 37
cond_block (109)
    on left: 127 128, on right: 125 126 128
while_loop (110)
    on left: 129, on right: 39
for_loop (111)
    on left: 130, on right: 40
struct_list (112)
    on left: 131 132, on right: 29 30 131
struct_pair (113)
    on left: 133 134, on right: 131 132
arg_list (114)
    on left: 135 136, on right: 105 107 111 135
statement_list (115)
    on left: 137 138, on right: 114 137
type_list (116)
    on left: 139 140 166 167, on right: 140 141 167
func_ptr (117)
    on left: 141, on right: 22
arg_pair (118)
    on left: 142 143, on right: 135 136
enum_def (119)
    on left: 144, on right: 23
enum_parts (120)
    on left: 145 146, on right: 144 146
enum_part (121)
    on left: 147 148, on right: 145 146
id_or_constant (122)
    on left: 149 150, on right: 36 70 71 72 77 78 79 80 81 82 83 84
    85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
    122 123
include_or_link (123)
    on left: 151 152, on right: 21
constant (124)
    on left: 153 154 155 156 157 158, on right: 150
constant_int (125)
    on left: 159, on right: 75 120 121 148 153
constant_bool (126)
    on left: 160 161, on right: 155
constant_enum_value (127)
    on left: 162, on right: 154
id (128)
    on left: 163, on right: 43 65 66 67 73 74 75 76 105 106 107 108
    110 111 113 114 115 116 117 120 121 133 134 142 147 148 149 162
type (129)
    on left: 164 165, on right: 29 30 70 105 106 110 111 115 117 120
    121 133 134 139 140 141 142 144 162 165 166 167


State 0

    0 $accept: . module $end

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    IMPORT      shift, and go to state 11
    EXPORT      shift, and go to state 12
    INCLUDE     shift, and go to state 13
    LINK        shift, and go to state 14
    FUNC_PTR    shift, and go to state 15
    STRUCT      shift, and go to state 16

    module             go to state 17
    statements         go to state 18
    node_setup         go to state 19
    statement          go to state 20
    alias_statement    go to state 21
    typedef_statement  go to state 22
    struct_def         go to state 23
    union_def          go to state 24
    flow_control       go to state 25
    loop               go to state 26
    import             go to state 27
    assign_op          go to state 28
    member_op          go to state 29
    variable_assign    go to state 30
    array_index        go to state 31
    function_def       go to state 32
    function_decl      go to state 33
    variable_decl      go to state 34
    array_decl         go to state 35
    return_statement   go to state 36
    if_statement       go to state 37
    cond_block         go to state 38
    while_loop         go to state 39
    for_loop           go to state 40
    func_ptr           go to state 41
    enum_def           go to state 42
    include_or_link    go to state 43
    id                 go to state 44
    type               go to state 45


State 1

  163 id: IDENTIFIER .

    $default  reduce using rule 163 (id)


State 2

  164 type: TYPE .

    $default  reduce using rule 164 (type)


State 3

  124 return_statement: RETURN . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 55
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 4

  127 cond_block: IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 87


State 5

  130 for_loop: FOR . LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 88


State 6

  129 while_loop: WHILE . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 89


State 7

   28 typedef_statement: TYPEDEF . TYPE TYPE

    TYPE  shift, and go to state 90


State 8

   27 alias_statement: ALIAS . TYPE TYPE

    TYPE  shift, and go to state 91


State 9

  144 enum_def: ENUM . type LEFT_BRACE enum_parts RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 92


State 10

   30 union_def: UNION . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 93


State 11

   43 import: IMPORT . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 94


State 12

  109 function_def: EXPORT . function_def
  112 function_decl: EXPORT . function_decl
  119 variable_decl: EXPORT . variable_decl

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    EXPORT      shift, and go to state 12

    function_def   go to state 95
    function_decl  go to state 96
    variable_decl  go to state 97
    array_decl     go to state 35
    id             go to state 98
    type           go to state 45


State 13

  151 include_or_link: INCLUDE . STRING

    STRING  shift, and go to state 99


State 14

  152 include_or_link: LINK . STRING

    STRING  shift, and go to state 100


State 15

  141 func_ptr: FUNC_PTR . type type LEFT_BRACKET type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type  go to state 101


State 16

   29 struct_def: STRUCT . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 102


State 17

    0 $accept: module . $end

    $end  shift, and go to state 103


State 18

    1 module: statements .
    3 statements: statements . node_setup

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    IMPORT      shift, and go to state 11
    EXPORT      shift, and go to state 12
    INCLUDE     shift, and go to state 13
    LINK        shift, and go to state 14
    FUNC_PTR    shift, and go to state 15
    STRUCT      shift, and go to state 16

    $default  reduce using rule 1 (module)

    node_setup         go to state 104
    statement          go to state 20
    alias_statement    go to state 21
    typedef_statement  go to state 22
    struct_def         go to state 23
    union_def          go to state 24
    flow_control       go to state 25
    loop               go to state 26
    import             go to state 27
    assign_op          go to state 28
    member_op          go to state 29
    variable_assign    go to state 30
    array_index        go to state 31
    function_def       go to state 32
    function_decl      go to state 33
    variable_decl      go to state 34
    array_decl         go to state 35
    return_statement   go to state 36
    if_statement       go to state 37
    cond_block         go to state 38
    while_loop         go to state 39
    for_loop           go to state 40
    func_ptr           go to state 41
    enum_def           go to state 42
    include_or_link    go to state 43
    id                 go to state 44
    type               go to state 45


State 19

    2 statements: node_setup .

    $default  reduce using rule 2 (statements)


State 20

    4 node_setup: statement .
    5           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 105

    $default  reduce using rule 4 (node_setup)


State 21

   17 statement: alias_statement .

    $default  reduce using rule 17 (statement)


State 22

   18 statement: typedef_statement .

    $default  reduce using rule 18 (statement)


State 23

   19 statement: struct_def .

    $default  reduce using rule 19 (statement)


State 24

   24 statement: union_def .

    $default  reduce using rule 24 (statement)


State 25

   25 statement: flow_control .

    $default  reduce using rule 25 (statement)


State 26

   38 flow_control: loop .

    $default  reduce using rule 38 (flow_control)


State 27

   20 statement: import .

    $default  reduce using rule 20 (statement)


State 28

   16 statement: assign_op .

    $default  reduce using rule 16 (statement)


State 29

   69 variable_assign: member_op . EQUAL assignable_statement

    EQUAL  shift, and go to state 106


State 30

   64 assign_op: variable_assign .

    $default  reduce using rule 64 (assign_op)


State 31

   68 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 107


State 32

   26 statement: function_def .

    $default  reduce using rule 26 (statement)


State 33

   14 statement: function_decl .

    $default  reduce using rule 14 (statement)


State 34

   15 statement: variable_decl .

    $default  reduce using rule 15 (statement)


State 35

  118 variable_decl: array_decl .

    $default  reduce using rule 118 (variable_decl)


State 36

   13 statement: return_statement .

    $default  reduce using rule 13 (statement)


State 37

   37 flow_control: if_statement .

    $default  reduce using rule 37 (flow_control)


State 38

  125 if_statement: cond_block .
  126             | cond_block . ELSE scope
  128 cond_block: cond_block . ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    ELSE  shift, and go to state 108

    $default  reduce using rule 125 (if_statement)


State 39

   39 loop: while_loop .

    $default  reduce using rule 39 (loop)


State 40

   40 loop: for_loop .

    $default  reduce using rule 40 (loop)


State 41

   22 statement: func_ptr .

    $default  reduce using rule 22 (statement)


State 42

   23 statement: enum_def .

    $default  reduce using rule 23 (statement)


State 43

   21 statement: include_or_link .

    $default  reduce using rule 21 (statement)


State 44

   65 member_op: id . FSTOP id
   66          | id . ARROW id
   67 variable_assign: id . EQUAL assignable_statement
   75 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   76            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  107 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  108             | id . LEFT_BRACKET RIGHT_BRACKET scope
  116 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET         shift, and go to state 109
    LEFT_SQUARE_BRACKET  shift, and go to state 110
    FSTOP                shift, and go to state 111
    COLON                shift, and go to state 112
    EQUAL                shift, and go to state 113
    ARROW                shift, and go to state 114


State 45

  105 function_def: type . id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  106             | type . id LEFT_BRACKET RIGHT_BRACKET scope
  110 function_decl: type . id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  111              | type . id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  115 variable_decl: type . id
  117              | type . id EQUAL assignable_statement
  120 array_decl: type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  121           | type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  165 type: type . ASTERISK

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 115

    id  go to state 116


State 46

  157 constant: STRING .

    $default  reduce using rule 157 (constant)


State 47

  159 constant_int: INTEGER .

    $default  reduce using rule 159 (constant_int)


State 48

  156 constant: FLOAT .

    $default  reduce using rule 156 (constant)


State 49

   70 cast: LEFT_BRACKET . type RIGHT_BRACKET id_or_constant

    TYPE  shift, and go to state 2

    type  go to state 117


State 50

   74 dereference: ASTERISK . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 118


State 51

   73 address_of: AND . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 119


State 52

  160 constant_bool: TRUE .

    $default  reduce using rule 160 (constant_bool)


State 53

  161 constant_bool: FALSE .

    $default  reduce using rule 161 (constant_bool)


State 54

  158 constant: NULLPTR .

    $default  reduce using rule 158 (constant)


State 55

  124 return_statement: RETURN assignable_statement .

    $default  reduce using rule 124 (return_statement)


State 56

   33 assignable_statement: unary_op .

    $default  reduce using rule 33 (assignable_statement)


State 57

   34 assignable_statement: binary_op .

    $default  reduce using rule 34 (assignable_statement)


State 58

   35 assignable_statement: member_op .

    $default  reduce using rule 35 (assignable_statement)


State 59

   44 unary_op: cast .

    $default  reduce using rule 44 (unary_op)


State 60

   45 unary_op: increment .

    $default  reduce using rule 45 (unary_op)


State 61

   46 unary_op: decrement .

    $default  reduce using rule 46 (unary_op)


State 62

   47 unary_op: address_of .

    $default  reduce using rule 47 (unary_op)


State 63

   48 unary_op: dereference .

    $default  reduce using rule 48 (unary_op)


State 64

   49 unary_op: array_index .

    $default  reduce using rule 49 (unary_op)


State 65

   50 binary_op: add .

    $default  reduce using rule 50 (binary_op)


State 66

   51 binary_op: subtract .

    $default  reduce using rule 51 (binary_op)


State 67

   52 binary_op: multiply .

    $default  reduce using rule 52 (binary_op)


State 68

   53 binary_op: divide .

    $default  reduce using rule 53 (binary_op)


State 69

   54 binary_op: equality .

    $default  reduce using rule 54 (binary_op)


State 70

   55 binary_op: inequality .

    $default  reduce using rule 55 (binary_op)


State 71

   56 binary_op: lesser .

    $default  reduce using rule 56 (binary_op)


State 72

   57 binary_op: greater .

    $default  reduce using rule 57 (binary_op)


State 73

   58 binary_op: lesser_or_equal .

    $default  reduce using rule 58 (binary_op)


State 74

   59 binary_op: greater_or_equal .

    $default  reduce using rule 59 (binary_op)


State 75

   60 binary_op: bitwise_and .

    $default  reduce using rule 60 (binary_op)


State 76

   61 binary_op: bitwise_or .

    $default  reduce using rule 61 (binary_op)


State 77

   62 binary_op: bitwise_left_shift .

    $default  reduce using rule 62 (binary_op)


State 78

   63 binary_op: bitwise_right_shift .

    $default  reduce using rule 63 (binary_op)


State 79

   32 assignable_statement: function_call .

    $default  reduce using rule 32 (assignable_statement)


State 80

   36 assignable_statement: id_or_constant .
   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   77 add: id_or_constant . PLUS id_or_constant
   78    | id_or_constant . PLUS unary_op
   79 subtract: id_or_constant . MINUS id_or_constant
   80         | id_or_constant . MINUS unary_op
   81 multiply: id_or_constant . ASTERISK id_or_constant
   82         | id_or_constant . ASTERISK unary_op
   83 divide: id_or_constant . FORWARD_SLASH id_or_constant
   84       | id_or_constant . FORWARD_SLASH unary_op
   85 equality: id_or_constant . EQUAL_EQUAL id_or_constant
   86         | id_or_constant . EQUAL_EQUAL unary_op
   87 inequality: id_or_constant . EXCLAMATION_EQUAL id_or_constant
   88           | id_or_constant . EXCLAMATION_EQUAL unary_op
   89 lesser: id_or_constant . LESSER id_or_constant
   90       | id_or_constant . LESSER unary_op
   91 greater: id_or_constant . GREATER id_or_constant
   92        | id_or_constant . GREATER unary_op
   93 lesser_or_equal: id_or_constant . LESSER_EQUAL id_or_constant
   94                | id_or_constant . LESSER_EQUAL unary_op
   95 greater_or_equal: id_or_constant . GREATER_EQUAL id_or_constant
   96                 | id_or_constant . GREATER_EQUAL unary_op
   97 bitwise_and: id_or_constant . AND id_or_constant
   98            | id_or_constant . AND unary_op
   99 bitwise_or: id_or_constant . OR id_or_constant
  100           | id_or_constant . OR unary_op
  101 bitwise_left_shift: id_or_constant . LEFT_SHIFT id_or_constant
  102                   | id_or_constant . LEFT_SHIFT unary_op
  103 bitwise_right_shift: id_or_constant . RIGHT_SHIFT id_or_constant
  104                    | id_or_constant . RIGHT_SHIFT unary_op

    PLUS               shift, and go to state 120
    MINUS              shift, and go to state 121
    ASTERISK           shift, and go to state 122
    FORWARD_SLASH      shift, and go to state 123
    EQUAL_EQUAL        shift, and go to state 124
    EXCLAMATION_EQUAL  shift, and go to state 125
    GREATER            shift, and go to state 126
    GREATER_EQUAL      shift, and go to state 127
    LESSER             shift, and go to state 128
    LESSER_EQUAL       shift, and go to state 129
    AND                shift, and go to state 130
    OR                 shift, and go to state 131
    LEFT_SHIFT         shift, and go to state 132
    RIGHT_SHIFT        shift, and go to state 133

    $default  reduce using rule 36 (assignable_statement)


State 81

  150 id_or_constant: constant .

    $default  reduce using rule 150 (id_or_constant)


State 82

  153 constant: constant_int .

    $default  reduce using rule 153 (constant)


State 83

  155 constant: constant_bool .

    $default  reduce using rule 155 (constant)


State 84

  154 constant: constant_enum_value .

    $default  reduce using rule 154 (constant)


State 85

   65 member_op: id . FSTOP id
   66          | id . ARROW id
   75 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   76            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  113 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  114              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  149 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 110
    FSTOP                shift, and go to state 111
    ARROW                shift, and go to state 114

    $default  reduce using rule 149 (id_or_constant)


State 86

  162 constant_enum_value: type . COLON COLON id
  165 type: type . ASTERISK

    COLON     shift, and go to state 135
    ASTERISK  shift, and go to state 115


State 87

  127 cond_block: IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 136
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 88

  130 for_loop: FOR LEFT_BRACKET . statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    IMPORT      shift, and go to state 11
    EXPORT      shift, and go to state 12
    INCLUDE     shift, and go to state 13
    LINK        shift, and go to state 14
    FUNC_PTR    shift, and go to state 15
    STRUCT      shift, and go to state 16

    statement          go to state 137
    alias_statement    go to state 21
    typedef_statement  go to state 22
    struct_def         go to state 23
    union_def          go to state 24
    flow_control       go to state 25
    loop               go to state 26
    import             go to state 27
    assign_op          go to state 28
    member_op          go to state 29
    variable_assign    go to state 30
    array_index        go to state 31
    function_def       go to state 32
    function_decl      go to state 33
    variable_decl      go to state 34
    array_decl         go to state 35
    return_statement   go to state 36
    if_statement       go to state 37
    cond_block         go to state 38
    while_loop         go to state 39
    for_loop           go to state 40
    func_ptr           go to state 41
    enum_def           go to state 42
    include_or_link    go to state 43
    id                 go to state 44
    type               go to state 45


State 89

  129 while_loop: WHILE LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 138
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 90

   28 typedef_statement: TYPEDEF TYPE . TYPE

    TYPE  shift, and go to state 139


State 91

   27 alias_statement: ALIAS TYPE . TYPE

    TYPE  shift, and go to state 140


State 92

  144 enum_def: ENUM type . LEFT_BRACE enum_parts RIGHT_BRACE
  165 type: type . ASTERISK

    LEFT_BRACE  shift, and go to state 141
    ASTERISK    shift, and go to state 115


State 93

   30 union_def: UNION type . LEFT_BRACE struct_list RIGHT_BRACE
  165 type: type . ASTERISK

    LEFT_BRACE  shift, and go to state 142
    ASTERISK    shift, and go to state 115


State 94

   43 import: IMPORT id .

    $default  reduce using rule 43 (import)


State 95

  109 function_def: EXPORT function_def .

    $default  reduce using rule 109 (function_def)


State 96

  112 function_decl: EXPORT function_decl .

    $default  reduce using rule 112 (function_decl)


State 97

  119 variable_decl: EXPORT variable_decl .

    $default  reduce using rule 119 (variable_decl)


State 98

  107 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  108             | id . LEFT_BRACKET RIGHT_BRACKET scope
  116 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET  shift, and go to state 109
    COLON         shift, and go to state 112


State 99

  151 include_or_link: INCLUDE STRING .

    $default  reduce using rule 151 (include_or_link)


State 100

  152 include_or_link: LINK STRING .

    $default  reduce using rule 152 (include_or_link)


State 101

  141 func_ptr: FUNC_PTR type . type LEFT_BRACKET type_list RIGHT_BRACKET
  165 type: type . ASTERISK

    TYPE      shift, and go to state 2
    ASTERISK  shift, and go to state 115

    type  go to state 143


State 102

   29 struct_def: STRUCT type . LEFT_BRACE struct_list RIGHT_BRACE
  165 type: type . ASTERISK

    LEFT_BRACE  shift, and go to state 144
    ASTERISK    shift, and go to state 115


State 103

    0 $accept: module $end .

    $default  accept


State 104

    3 statements: statements node_setup .

    $default  reduce using rule 3 (statements)


State 105

    5 node_setup: statement SEMICOLON .

    $default  reduce using rule 5 (node_setup)


State 106

   69 variable_assign: member_op EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 145
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 107

   68 variable_assign: array_index EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 146
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 108

  126 if_statement: cond_block ELSE . scope
  128 cond_block: cond_block ELSE . IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACE  shift, and go to state 147
    IF          shift, and go to state 148

    scope  go to state 149


State 109

  107 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  108             | id LEFT_BRACKET . RIGHT_BRACKET scope

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 150
    FSTOP          shift, and go to state 151

    arg_list  go to state 152
    arg_pair  go to state 153
    type      go to state 154


State 110

   75 array_index: id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
   76            | id LEFT_SQUARE_BRACKET . id RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 47

    constant_int  go to state 155
    id            go to state 156


State 111

   65 member_op: id FSTOP . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 157


State 112

  116 variable_decl: id COLON . EQUAL assignable_statement

    EQUAL  shift, and go to state 158


State 113

   67 variable_assign: id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 159
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 114

   66 member_op: id ARROW . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 160


State 115

  165 type: type ASTERISK .

    $default  reduce using rule 165 (type)


State 116

  105 function_def: type id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  106             | type id . LEFT_BRACKET RIGHT_BRACKET scope
  110 function_decl: type id . LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  111              | type id . LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  115 variable_decl: type id .
  117              | type id . EQUAL assignable_statement
  120 array_decl: type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  121           | type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACKET         shift, and go to state 161
    LEFT_SQUARE_BRACKET  shift, and go to state 162
    EQUAL                shift, and go to state 163

    $default  reduce using rule 115 (variable_decl)


State 117

   70 cast: LEFT_BRACKET type . RIGHT_BRACKET id_or_constant
  165 type: type . ASTERISK

    RIGHT_BRACKET  shift, and go to state 164
    ASTERISK       shift, and go to state 115


State 118

   74 dereference: ASTERISK id .

    $default  reduce using rule 74 (dereference)


State 119

   73 address_of: AND id .

    $default  reduce using rule 73 (address_of)


State 120

   71 increment: id_or_constant PLUS . PLUS
   77 add: id_or_constant PLUS . id_or_constant
   78    | id_or_constant PLUS . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    PLUS          shift, and go to state 165
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 166
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 167
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 121

   72 decrement: id_or_constant MINUS . MINUS
   79 subtract: id_or_constant MINUS . id_or_constant
   80         | id_or_constant MINUS . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    MINUS         shift, and go to state 169
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 170
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 171
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 122

   81 multiply: id_or_constant ASTERISK . id_or_constant
   82         | id_or_constant ASTERISK . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 172
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 173
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 123

   83 divide: id_or_constant FORWARD_SLASH . id_or_constant
   84       | id_or_constant FORWARD_SLASH . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 174
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 175
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 124

   85 equality: id_or_constant EQUAL_EQUAL . id_or_constant
   86         | id_or_constant EQUAL_EQUAL . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 176
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 177
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 125

   87 inequality: id_or_constant EXCLAMATION_EQUAL . id_or_constant
   88           | id_or_constant EXCLAMATION_EQUAL . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 178
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 179
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 126

   91 greater: id_or_constant GREATER . id_or_constant
   92        | id_or_constant GREATER . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 180
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 181
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 127

   95 greater_or_equal: id_or_constant GREATER_EQUAL . id_or_constant
   96                 | id_or_constant GREATER_EQUAL . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 182
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 183
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 128

   89 lesser: id_or_constant LESSER . id_or_constant
   90       | id_or_constant LESSER . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 184
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 185
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 129

   93 lesser_or_equal: id_or_constant LESSER_EQUAL . id_or_constant
   94                | id_or_constant LESSER_EQUAL . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 186
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 187
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 130

   97 bitwise_and: id_or_constant AND . id_or_constant
   98            | id_or_constant AND . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 188
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 189
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 131

   99 bitwise_or: id_or_constant OR . id_or_constant
  100           | id_or_constant OR . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 190
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 191
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 132

  101 bitwise_left_shift: id_or_constant LEFT_SHIFT . id_or_constant
  102                   | id_or_constant LEFT_SHIFT . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 192
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 193
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 133

  103 bitwise_right_shift: id_or_constant RIGHT_SHIFT . id_or_constant
  104                    | id_or_constant RIGHT_SHIFT . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    unary_op             go to state 194
    cast                 go to state 59
    increment            go to state 60
    decrement            go to state 61
    address_of           go to state 62
    dereference          go to state 63
    array_index          go to state 64
    id_or_constant       go to state 195
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 168
    type                 go to state 86


State 134

  113 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  114              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 46
    INTEGER        shift, and go to state 47
    FLOAT          shift, and go to state 48
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 49
    RIGHT_BRACKET  shift, and go to state 196
    ASTERISK       shift, and go to state 50
    AND            shift, and go to state 51
    TRUE           shift, and go to state 52
    FALSE          shift, and go to state 53
    NULLPTR        shift, and go to state 54

    assignable_statement  go to state 197
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    statement_list        go to state 198
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 135

  162 constant_enum_value: type COLON . COLON id

    COLON  shift, and go to state 199


State 136

  127 cond_block: IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 200


State 137

  130 for_loop: FOR LEFT_BRACKET statement . SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 201


State 138

  129 while_loop: WHILE LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 202


State 139

   28 typedef_statement: TYPEDEF TYPE TYPE .

    $default  reduce using rule 28 (typedef_statement)


State 140

   27 alias_statement: ALIAS TYPE TYPE .

    $default  reduce using rule 27 (alias_statement)


State 141

  144 enum_def: ENUM type LEFT_BRACE . enum_parts RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1

    enum_parts  go to state 203
    enum_part   go to state 204
    id          go to state 205


State 142

   30 union_def: UNION type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    struct_list  go to state 206
    struct_pair  go to state 207
    type         go to state 208


State 143

  141 func_ptr: FUNC_PTR type type . LEFT_BRACKET type_list RIGHT_BRACKET
  165 type: type . ASTERISK

    LEFT_BRACKET  shift, and go to state 209
    ASTERISK      shift, and go to state 115


State 144

   29 struct_def: STRUCT type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    struct_list  go to state 210
    struct_pair  go to state 207
    type         go to state 208


State 145

   69 variable_assign: member_op EQUAL assignable_statement .

    $default  reduce using rule 69 (variable_assign)


State 146

   68 variable_assign: array_index EQUAL assignable_statement .

    $default  reduce using rule 68 (variable_assign)


State 147

   41 scope: LEFT_BRACE . semicoloned_statements RIGHT_BRACE
   42      | LEFT_BRACE . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    RIGHT_BRACE   shift, and go to state 211
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 212
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    IMPORT        shift, and go to state 11
    EXPORT        shift, and go to state 12
    INCLUDE       shift, and go to state 13
    LINK          shift, and go to state 14
    FUNC_PTR      shift, and go to state 15
    NULLPTR       shift, and go to state 54
    STRUCT        shift, and go to state 16

    semicoloned_statements  go to state 213
    semicoloned_statement   go to state 214
    statement               go to state 215
    alias_statement         go to state 21
    typedef_statement       go to state 22
    struct_def              go to state 23
    union_def               go to state 24
    defer_statement         go to state 216
    assignable_statement    go to state 217
    flow_control            go to state 218
    loop                    go to state 26
    import                  go to state 27
    unary_op                go to state 56
    binary_op               go to state 57
    assign_op               go to state 28
    member_op               go to state 219
    variable_assign         go to state 30
    cast                    go to state 59
    increment               go to state 60
    decrement               go to state 61
    address_of              go to state 62
    dereference             go to state 63
    array_index             go to state 220
    add                     go to state 65
    subtract                go to state 66
    multiply                go to state 67
    divide                  go to state 68
    equality                go to state 69
    inequality              go to state 70
    lesser                  go to state 71
    greater                 go to state 72
    lesser_or_equal         go to state 73
    greater_or_equal        go to state 74
    bitwise_and             go to state 75
    bitwise_or              go to state 76
    bitwise_left_shift      go to state 77
    bitwise_right_shift     go to state 78
    function_def            go to state 221
    function_decl           go to state 33
    function_call           go to state 79
    variable_decl           go to state 34
    array_decl              go to state 35
    return_statement        go to state 36
    if_statement            go to state 37
    cond_block              go to state 38
    while_loop              go to state 39
    for_loop                go to state 40
    func_ptr                go to state 41
    enum_def                go to state 42
    id_or_constant          go to state 80
    include_or_link         go to state 43
    constant                go to state 81
    constant_int            go to state 82
    constant_bool           go to state 83
    constant_enum_value     go to state 84
    id                      go to state 222
    type                    go to state 223


State 148

  128 cond_block: cond_block ELSE IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 224


State 149

  126 if_statement: cond_block ELSE scope .

    $default  reduce using rule 126 (if_statement)


State 150

  108 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 225


State 151

  143 arg_pair: FSTOP . FSTOP FSTOP

    FSTOP  shift, and go to state 226


State 152

  107 function_def: id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  135 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 227
    COMMA          shift, and go to state 228


State 153

  136 arg_list: arg_pair .

    $default  reduce using rule 136 (arg_list)


State 154

  142 arg_pair: type . id
  165 type: type . ASTERISK

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 115

    id  go to state 229


State 155

   75 array_index: id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 230


State 156

   76 array_index: id LEFT_SQUARE_BRACKET id . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 231


State 157

   65 member_op: id FSTOP id .

    $default  reduce using rule 65 (member_op)


State 158

  116 variable_decl: id COLON EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 232
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 159

   67 variable_assign: id EQUAL assignable_statement .

    $default  reduce using rule 67 (variable_assign)


State 160

   66 member_op: id ARROW id .

    $default  reduce using rule 66 (member_op)


State 161

  105 function_def: type id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  106             | type id LEFT_BRACKET . RIGHT_BRACKET scope
  110 function_decl: type id LEFT_BRACKET . RIGHT_BRACKET SEMICOLON
  111              | type id LEFT_BRACKET . arg_list RIGHT_BRACKET SEMICOLON

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 233
    FSTOP          shift, and go to state 151

    arg_list  go to state 234
    arg_pair  go to state 153
    type      go to state 154


State 162

  120 array_decl: type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
  121           | type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    INTEGER  shift, and go to state 47

    constant_int  go to state 235


State 163

  117 variable_decl: type id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 236
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 164

   70 cast: LEFT_BRACKET type RIGHT_BRACKET . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 46
    INTEGER     shift, and go to state 47
    FLOAT       shift, and go to state 48
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 52
    FALSE       shift, and go to state 53
    NULLPTR     shift, and go to state 54

    id_or_constant       go to state 237
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 238
    type                 go to state 86


State 165

   71 increment: id_or_constant PLUS PLUS .

    $default  reduce using rule 71 (increment)


State 166

   78 add: id_or_constant PLUS unary_op .

    $default  reduce using rule 78 (add)


State 167

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   77 add: id_or_constant PLUS id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 77 (add)


State 168

   75 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   76            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  149 id_or_constant: id .

    LEFT_SQUARE_BRACKET  shift, and go to state 110

    $default  reduce using rule 149 (id_or_constant)


State 169

   72 decrement: id_or_constant MINUS MINUS .

    $default  reduce using rule 72 (decrement)


State 170

   80 subtract: id_or_constant MINUS unary_op .

    $default  reduce using rule 80 (subtract)


State 171

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   79 subtract: id_or_constant MINUS id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 79 (subtract)


State 172

   82 multiply: id_or_constant ASTERISK unary_op .

    $default  reduce using rule 82 (multiply)


State 173

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   81 multiply: id_or_constant ASTERISK id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 81 (multiply)


State 174

   84 divide: id_or_constant FORWARD_SLASH unary_op .

    $default  reduce using rule 84 (divide)


State 175

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   83 divide: id_or_constant FORWARD_SLASH id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 83 (divide)


State 176

   86 equality: id_or_constant EQUAL_EQUAL unary_op .

    $default  reduce using rule 86 (equality)


State 177

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   85 equality: id_or_constant EQUAL_EQUAL id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 85 (equality)


State 178

   88 inequality: id_or_constant EXCLAMATION_EQUAL unary_op .

    $default  reduce using rule 88 (inequality)


State 179

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   87 inequality: id_or_constant EXCLAMATION_EQUAL id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 87 (inequality)


State 180

   92 greater: id_or_constant GREATER unary_op .

    $default  reduce using rule 92 (greater)


State 181

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   91 greater: id_or_constant GREATER id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 91 (greater)


State 182

   96 greater_or_equal: id_or_constant GREATER_EQUAL unary_op .

    $default  reduce using rule 96 (greater_or_equal)


State 183

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   95 greater_or_equal: id_or_constant GREATER_EQUAL id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 95 (greater_or_equal)


State 184

   90 lesser: id_or_constant LESSER unary_op .

    $default  reduce using rule 90 (lesser)


State 185

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   89 lesser: id_or_constant LESSER id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 89 (lesser)


State 186

   94 lesser_or_equal: id_or_constant LESSER_EQUAL unary_op .

    $default  reduce using rule 94 (lesser_or_equal)


State 187

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   93 lesser_or_equal: id_or_constant LESSER_EQUAL id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 93 (lesser_or_equal)


State 188

   98 bitwise_and: id_or_constant AND unary_op .

    $default  reduce using rule 98 (bitwise_and)


State 189

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   97 bitwise_and: id_or_constant AND id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 97 (bitwise_and)


State 190

  100 bitwise_or: id_or_constant OR unary_op .

    $default  reduce using rule 100 (bitwise_or)


State 191

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
   99 bitwise_or: id_or_constant OR id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 99 (bitwise_or)


State 192

  102 bitwise_left_shift: id_or_constant LEFT_SHIFT unary_op .

    $default  reduce using rule 102 (bitwise_left_shift)


State 193

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
  101 bitwise_left_shift: id_or_constant LEFT_SHIFT id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 101 (bitwise_left_shift)


State 194

  104 bitwise_right_shift: id_or_constant RIGHT_SHIFT unary_op .

    $default  reduce using rule 104 (bitwise_right_shift)


State 195

   71 increment: id_or_constant . PLUS PLUS
   72 decrement: id_or_constant . MINUS MINUS
  103 bitwise_right_shift: id_or_constant RIGHT_SHIFT id_or_constant .

    PLUS   shift, and go to state 239
    MINUS  shift, and go to state 240

    $default  reduce using rule 103 (bitwise_right_shift)


State 196

  113 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 113 (function_call)


State 197

  138 statement_list: assignable_statement .

    $default  reduce using rule 138 (statement_list)


State 198

  114 function_call: id LEFT_BRACKET statement_list . RIGHT_BRACKET
  137 statement_list: statement_list . COMMA assignable_statement

    RIGHT_BRACKET  shift, and go to state 241
    COMMA          shift, and go to state 242


State 199

  162 constant_enum_value: type COLON COLON . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 243


State 200

  127 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 244


State 201

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON . assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 245
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 202

  129 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 246


State 203

  144 enum_def: ENUM type LEFT_BRACE enum_parts . RIGHT_BRACE
  146 enum_parts: enum_parts . COMMA enum_part

    RIGHT_BRACE  shift, and go to state 247
    COMMA        shift, and go to state 248


State 204

  145 enum_parts: enum_part .

    $default  reduce using rule 145 (enum_parts)


State 205

  147 enum_part: id .
  148          | id . EQUAL constant_int

    EQUAL  shift, and go to state 249

    $default  reduce using rule 147 (enum_part)


State 206

   30 union_def: UNION type LEFT_BRACE struct_list . RIGHT_BRACE
  131 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 250

    struct_pair  go to state 251
    type         go to state 208


State 207

  132 struct_list: struct_pair .

    $default  reduce using rule 132 (struct_list)


State 208

  133 struct_pair: type . id SEMICOLON
  134            | type . id EQUAL assignable_statement SEMICOLON
  165 type: type . ASTERISK

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 115

    id  go to state 252


State 209

  141 func_ptr: FUNC_PTR type type LEFT_BRACKET . type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type_list  go to state 253
    type       go to state 254


State 210

   29 struct_def: STRUCT type LEFT_BRACE struct_list . RIGHT_BRACE
  131 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 255

    struct_pair  go to state 251
    type         go to state 208


State 211

   42 scope: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 42 (scope)


State 212

   31 defer_statement: DEFER . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 256
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 213

    7 semicoloned_statements: semicoloned_statements . semicoloned_statement
   41 scope: LEFT_BRACE semicoloned_statements . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    RIGHT_BRACE   shift, and go to state 257
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 212
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    IMPORT        shift, and go to state 11
    EXPORT        shift, and go to state 12
    INCLUDE       shift, and go to state 13
    LINK          shift, and go to state 14
    FUNC_PTR      shift, and go to state 15
    NULLPTR       shift, and go to state 54
    STRUCT        shift, and go to state 16

    semicoloned_statement  go to state 258
    statement              go to state 215
    alias_statement        go to state 21
    typedef_statement      go to state 22
    struct_def             go to state 23
    union_def              go to state 24
    defer_statement        go to state 216
    assignable_statement   go to state 217
    flow_control           go to state 218
    loop                   go to state 26
    import                 go to state 27
    unary_op               go to state 56
    binary_op              go to state 57
    assign_op              go to state 28
    member_op              go to state 219
    variable_assign        go to state 30
    cast                   go to state 59
    increment              go to state 60
    decrement              go to state 61
    address_of             go to state 62
    dereference            go to state 63
    array_index            go to state 220
    add                    go to state 65
    subtract               go to state 66
    multiply               go to state 67
    divide                 go to state 68
    equality               go to state 69
    inequality             go to state 70
    lesser                 go to state 71
    greater                go to state 72
    lesser_or_equal        go to state 73
    greater_or_equal       go to state 74
    bitwise_and            go to state 75
    bitwise_or             go to state 76
    bitwise_left_shift     go to state 77
    bitwise_right_shift    go to state 78
    function_def           go to state 221
    function_decl          go to state 33
    function_call          go to state 79
    variable_decl          go to state 34
    array_decl             go to state 35
    return_statement       go to state 36
    if_statement           go to state 37
    cond_block             go to state 38
    while_loop             go to state 39
    for_loop               go to state 40
    func_ptr               go to state 41
    enum_def               go to state 42
    id_or_constant         go to state 80
    include_or_link        go to state 43
    constant               go to state 81
    constant_int           go to state 82
    constant_bool          go to state 83
    constant_enum_value    go to state 84
    id                     go to state 222
    type                   go to state 223


State 214

    6 semicoloned_statements: semicoloned_statement .

    $default  reduce using rule 6 (semicoloned_statements)


State 215

    8 semicoloned_statement: statement . SEMICOLON

    SEMICOLON  shift, and go to state 259


State 216

   11 semicoloned_statement: defer_statement . SEMICOLON

    SEMICOLON  shift, and go to state 260


State 217

    9 semicoloned_statement: assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 261


State 218

   10 semicoloned_statement: flow_control .
   25 statement: flow_control .

    SEMICOLON  reduce using rule 25 (statement)
    $default   reduce using rule 10 (semicoloned_statement)


State 219

   35 assignable_statement: member_op .
   69 variable_assign: member_op . EQUAL assignable_statement

    EQUAL  shift, and go to state 106

    $default  reduce using rule 35 (assignable_statement)


State 220

   49 unary_op: array_index .
   68 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 107

    $default  reduce using rule 49 (unary_op)


State 221

   12 semicoloned_statement: function_def .
   26 statement: function_def .

    SEMICOLON  reduce using rule 26 (statement)
    $default   reduce using rule 12 (semicoloned_statement)


State 222

   65 member_op: id . FSTOP id
   66          | id . ARROW id
   67 variable_assign: id . EQUAL assignable_statement
   75 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   76            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  107 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  108             | id . LEFT_BRACKET RIGHT_BRACKET scope
  113 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  114              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  116 variable_decl: id . COLON EQUAL assignable_statement
  149 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 262
    LEFT_SQUARE_BRACKET  shift, and go to state 110
    FSTOP                shift, and go to state 111
    COLON                shift, and go to state 112
    EQUAL                shift, and go to state 113
    ARROW                shift, and go to state 114

    $default  reduce using rule 149 (id_or_constant)


State 223

  105 function_def: type . id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  106             | type . id LEFT_BRACKET RIGHT_BRACKET scope
  110 function_decl: type . id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  111              | type . id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  115 variable_decl: type . id
  117              | type . id EQUAL assignable_statement
  120 array_decl: type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  121           | type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  162 constant_enum_value: type . COLON COLON id
  165 type: type . ASTERISK

    IDENTIFIER  shift, and go to state 1
    COLON       shift, and go to state 135
    ASTERISK    shift, and go to state 115

    id  go to state 116


State 224

  128 cond_block: cond_block ELSE IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 263
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 225

  108 function_def: id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 108 (function_def)


State 226

  143 arg_pair: FSTOP FSTOP . FSTOP

    FSTOP  shift, and go to state 264


State 227

  107 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 265


State 228

  135 arg_list: arg_list COMMA . arg_pair

    TYPE   shift, and go to state 2
    FSTOP  shift, and go to state 151

    arg_pair  go to state 266
    type      go to state 154


State 229

  142 arg_pair: type id .

    $default  reduce using rule 142 (arg_pair)


State 230

   75 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 75 (array_index)


State 231

   76 array_index: id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 76 (array_index)


State 232

  116 variable_decl: id COLON EQUAL assignable_statement .

    $default  reduce using rule 116 (variable_decl)


State 233

  106 function_def: type id LEFT_BRACKET RIGHT_BRACKET . scope
  110 function_decl: type id LEFT_BRACKET RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 147
    SEMICOLON   shift, and go to state 267

    scope  go to state 268


State 234

  105 function_def: type id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  111 function_decl: type id LEFT_BRACKET arg_list . RIGHT_BRACKET SEMICOLON
  135 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 269
    COMMA          shift, and go to state 228


State 235

  120 array_decl: type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET
  121           | type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    RIGHT_SQUARE_BRACKET  shift, and go to state 270


State 236

  117 variable_decl: type id EQUAL assignable_statement .

    $default  reduce using rule 117 (variable_decl)


State 237

   70 cast: LEFT_BRACKET type RIGHT_BRACKET id_or_constant .

    $default  reduce using rule 70 (cast)


State 238

  149 id_or_constant: id .

    $default  reduce using rule 149 (id_or_constant)


State 239

   71 increment: id_or_constant PLUS . PLUS

    PLUS  shift, and go to state 165


State 240

   72 decrement: id_or_constant MINUS . MINUS

    MINUS  shift, and go to state 169


State 241

  114 function_call: id LEFT_BRACKET statement_list RIGHT_BRACKET .

    $default  reduce using rule 114 (function_call)


State 242

  137 statement_list: statement_list COMMA . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 271
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 243

  162 constant_enum_value: type COLON COLON id .

    $default  reduce using rule 162 (constant_enum_value)


State 244

  127 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 127 (cond_block)


State 245

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement . SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 272


State 246

  129 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 129 (while_loop)


State 247

  144 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE .

    $default  reduce using rule 144 (enum_def)


State 248

  146 enum_parts: enum_parts COMMA . enum_part

    IDENTIFIER  shift, and go to state 1

    enum_part  go to state 273
    id         go to state 205


State 249

  148 enum_part: id EQUAL . constant_int

    INTEGER  shift, and go to state 47

    constant_int  go to state 274


State 250

   30 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 30 (union_def)


State 251

  131 struct_list: struct_list struct_pair .

    $default  reduce using rule 131 (struct_list)


State 252

  133 struct_pair: type id . SEMICOLON
  134            | type id . EQUAL assignable_statement SEMICOLON

    SEMICOLON  shift, and go to state 275
    EQUAL      shift, and go to state 276


State 253

  140 type_list: type_list . COMMA type
  141 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list . RIGHT_BRACKET
  167 type_list: type_list . COMMA type

    RIGHT_BRACKET  shift, and go to state 277
    COMMA          shift, and go to state 278


State 254

  139 type_list: type .
  165 type: type . ASTERISK
  166 type_list: type .

    ASTERISK  shift, and go to state 115

    RIGHT_BRACKET  reduce using rule 139 (type_list)
    RIGHT_BRACKET  [reduce using rule 166 (type_list)]
    COMMA          reduce using rule 139 (type_list)
    COMMA          [reduce using rule 166 (type_list)]
    $default       reduce using rule 139 (type_list)


State 255

   29 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 29 (struct_def)


State 256

   31 defer_statement: DEFER assignable_statement .

    $default  reduce using rule 31 (defer_statement)


State 257

   41 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE .

    $default  reduce using rule 41 (scope)


State 258

    7 semicoloned_statements: semicoloned_statements semicoloned_statement .

    $default  reduce using rule 7 (semicoloned_statements)


State 259

    8 semicoloned_statement: statement SEMICOLON .

    $default  reduce using rule 8 (semicoloned_statement)


State 260

   11 semicoloned_statement: defer_statement SEMICOLON .

    $default  reduce using rule 11 (semicoloned_statement)


State 261

    9 semicoloned_statement: assignable_statement SEMICOLON .

    $default  reduce using rule 9 (semicoloned_statement)


State 262

  107 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  108             | id LEFT_BRACKET . RIGHT_BRACKET scope
  113 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  114              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 46
    INTEGER        shift, and go to state 47
    FLOAT          shift, and go to state 48
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 49
    RIGHT_BRACKET  shift, and go to state 279
    FSTOP          shift, and go to state 151
    ASTERISK       shift, and go to state 50
    AND            shift, and go to state 51
    TRUE           shift, and go to state 52
    FALSE          shift, and go to state 53
    NULLPTR        shift, and go to state 54

    assignable_statement  go to state 197
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    arg_list              go to state 152
    statement_list        go to state 198
    arg_pair              go to state 153
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 280


State 263

  128 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 281


State 264

  143 arg_pair: FSTOP FSTOP FSTOP .

    $default  reduce using rule 143 (arg_pair)


State 265

  107 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 107 (function_def)


State 266

  135 arg_list: arg_list COMMA arg_pair .

    $default  reduce using rule 135 (arg_list)


State 267

  110 function_decl: type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 110 (function_decl)


State 268

  106 function_def: type id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 106 (function_def)


State 269

  105 function_def: type id LEFT_BRACKET arg_list RIGHT_BRACKET . scope
  111 function_decl: type id LEFT_BRACKET arg_list RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 147
    SEMICOLON   shift, and go to state 282

    scope  go to state 283


State 270

  120 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .
  121           | type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET . EQUAL LEFT_BRACE init_list RIGHT_BRACE

    EQUAL  shift, and go to state 284

    $default  reduce using rule 120 (array_decl)


State 271

  137 statement_list: statement_list COMMA assignable_statement .

    $default  reduce using rule 137 (statement_list)


State 272

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 285
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 273

  146 enum_parts: enum_parts COMMA enum_part .

    $default  reduce using rule 146 (enum_parts)


State 274

  148 enum_part: id EQUAL constant_int .

    $default  reduce using rule 148 (enum_part)


State 275

  133 struct_pair: type id SEMICOLON .

    $default  reduce using rule 133 (struct_pair)


State 276

  134 struct_pair: type id EQUAL . assignable_statement SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 46
    INTEGER       shift, and go to state 47
    FLOAT         shift, and go to state 48
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 49
    ASTERISK      shift, and go to state 50
    AND           shift, and go to state 51
    TRUE          shift, and go to state 52
    FALSE         shift, and go to state 53
    NULLPTR       shift, and go to state 54

    assignable_statement  go to state 286
    unary_op              go to state 56
    binary_op             go to state 57
    member_op             go to state 58
    cast                  go to state 59
    increment             go to state 60
    decrement             go to state 61
    address_of            go to state 62
    dereference           go to state 63
    array_index           go to state 64
    add                   go to state 65
    subtract              go to state 66
    multiply              go to state 67
    divide                go to state 68
    equality              go to state 69
    inequality            go to state 70
    lesser                go to state 71
    greater               go to state 72
    lesser_or_equal       go to state 73
    greater_or_equal      go to state 74
    bitwise_and           go to state 75
    bitwise_or            go to state 76
    bitwise_left_shift    go to state 77
    bitwise_right_shift   go to state 78
    function_call         go to state 79
    id_or_constant        go to state 80
    constant              go to state 81
    constant_int          go to state 82
    constant_bool         go to state 83
    constant_enum_value   go to state 84
    id                    go to state 85
    type                  go to state 86


State 277

  141 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET .

    $default  reduce using rule 141 (func_ptr)


State 278

  140 type_list: type_list COMMA . type
  167          | type_list COMMA . type

    TYPE  shift, and go to state 2

    type  go to state 287


State 279

  108 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope
  113 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    LEFT_BRACE  shift, and go to state 147

    $default  reduce using rule 113 (function_call)

    scope  go to state 225


State 280

  142 arg_pair: type . id
  162 constant_enum_value: type . COLON COLON id
  165 type: type . ASTERISK

    IDENTIFIER  shift, and go to state 1
    COLON       shift, and go to state 135
    ASTERISK    shift, and go to state 115

    id  go to state 229


State 281

  128 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 288


State 282

  111 function_decl: type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 111 (function_decl)


State 283

  105 function_def: type id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 105 (function_def)


State 284

  121 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL . LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 289


State 285

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 290


State 286

  134 struct_pair: type id EQUAL assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 291


State 287

  140 type_list: type_list COMMA type .
  165 type: type . ASTERISK
  167 type_list: type_list COMMA type .

    ASTERISK  shift, and go to state 115

    RIGHT_BRACKET  reduce using rule 140 (type_list)
    RIGHT_BRACKET  [reduce using rule 167 (type_list)]
    COMMA          reduce using rule 140 (type_list)
    COMMA          [reduce using rule 167 (type_list)]
    $default       reduce using rule 140 (type_list)


State 288

  128 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 128 (cond_block)


State 289

  121 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE . init_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 46
    INTEGER     shift, and go to state 47
    FLOAT       shift, and go to state 48
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 52
    FALSE       shift, and go to state 53
    NULLPTR     shift, and go to state 54

    init_list            go to state 292
    id_or_constant       go to state 293
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 238
    type                 go to state 86


State 290

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 147

    scope  go to state 294


State 291

  134 struct_pair: type id EQUAL assignable_statement SEMICOLON .

    $default  reduce using rule 134 (struct_pair)


State 292

  121 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list . RIGHT_BRACE
  123 init_list: init_list . COMMA id_or_constant

    RIGHT_BRACE  shift, and go to state 295
    COMMA        shift, and go to state 296


State 293

  122 init_list: id_or_constant .

    $default  reduce using rule 122 (init_list)


State 294

  130 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 130 (for_loop)


State 295

  121 array_decl: type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE .

    $default  reduce using rule 121 (array_decl)


State 296

  123 init_list: init_list COMMA . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 46
    INTEGER     shift, and go to state 47
    FLOAT       shift, and go to state 48
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 52
    FALSE       shift, and go to state 53
    NULLPTR     shift, and go to state 54

    id_or_constant       go to state 297
    constant             go to state 81
    constant_int         go to state 82
    constant_bool        go to state 83
    constant_enum_value  go to state 84
    id                   go to state 238
    type                 go to state 86


State 297

  123 init_list: init_list COMMA id_or_constant .

    $default  reduce using rule 123 (init_list)
