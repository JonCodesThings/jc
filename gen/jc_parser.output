Terminals unused in grammar

   EXCLAMATION
   AND_AND
   OR_OR
   AUTO
   EXTERN
   UNKNOWN


Rules useless in parser due to conflicts

   28 statement: struct_decl


State 25 conflicts: 19 reduce/reduce
State 89 conflicts: 2 shift/reduce
State 118 conflicts: 1 shift/reduce
State 127 conflicts: 2 reduce/reduce
State 145 conflicts: 1 shift/reduce
State 146 conflicts: 1 shift/reduce


Grammar

    0 $accept: module $end

    1 module: statements

    2 statements: node_setup
    3           | statements node_setup

    4 node_setup: statement
    5           | statement SEMICOLON

    6 semicoloned_statements: semicoloned_statement
    7                       | semicoloned_statements semicoloned_statement

    8 semicoloned_statement: statement SEMICOLON
    9                      | assignable_statement SEMICOLON
   10                      | flow_control
   11                      | defer_statement SEMICOLON
   12                      | function_def

   13 statement: return_statement
   14          | function_decl
   15          | variable_decl
   16          | assign_op
   17          | alias_statement
   18          | typedef_statement
   19          | struct_def
   20          | struct_decl
   21          | import
   22          | include_or_link
   23          | func_ptr
   24          | enum_def
   25          | union_def
   26          | flow_control
   27          | function_def
   28          | struct_decl

   29 alias_statement: ALIAS TYPE TYPE

   30 typedef_statement: TYPEDEF TYPE TYPE

   31 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE
   32           | EXPORT struct_def

   33 struct_decl: STRUCT type

   34 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE
   35          | EXPORT union_def

   36 defer_statement: DEFER assignable_statement

   37 assignable_statement: function_call
   38                     | unary_op
   39                     | binary_op
   40                     | member_op
   41                     | id_or_constant

   42 flow_control: if_statement
   43             | loop

   44 loop: while_loop
   45     | for_loop

   46 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE
   47      | LEFT_BRACE RIGHT_BRACE

   48 import: IMPORT id

   49 unary_op: cast
   50         | increment
   51         | decrement
   52         | address_of
   53         | dereference
   54         | array_index
   55         | unary_minus
   56         | unary_plus

   57 unary_minus: MINUS id_or_constant

   58 unary_plus: PLUS id_or_constant

   59 binary_op: binop

   60 assign_op: variable_assign

   61 memberable: id
   62           | array_index

   63 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET

   65 member_op: memberable FSTOP memberable
   66          | memberable FSTOP member_op
   67          | memberable ARROW memberable
   68          | memberable ARROW member_op

   69 variable_assign: id EQUAL assignable_statement
   70                | array_index EQUAL assignable_statement
   71                | member_op EQUAL assignable_statement

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET id_or_constant

   73 increment: id_or_constant PLUS PLUS

   74 decrement: id_or_constant MINUS MINUS

   75 address_of: AND id
   76           | AND unary_op

   77 dereference: ASTERISK id

   78 binop_id: PLUS
   79         | MINUS
   80         | ASTERISK
   81         | FORWARD_SLASH
   82         | EQUAL_EQUAL
   83         | EXCLAMATION_EQUAL
   84         | LESSER
   85         | GREATER
   86         | LESSER_EQUAL
   87         | GREATER_EQUAL
   88         | AND
   89         | OR
   90         | LEFT_SHIFT
   91         | RIGHT_SHIFT
   92         | PERCENT

   93 binop: id_or_constant binop_id id_or_constant
   94      | id_or_constant binop_id unary_op
   95      | unary_op binop_id id_or_constant
   96      | member_op binop_id member_op
   97      | id_or_constant binop_id member_op
   98      | member_op binop_id id_or_constant

   99 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  100             | composited_type id LEFT_BRACKET RIGHT_BRACKET scope
  101             | id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  102             | id LEFT_BRACKET RIGHT_BRACKET scope
  103             | EXPORT function_def

  104 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  105              | composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  106              | EXPORT function_decl

  107 function_call: id LEFT_BRACKET RIGHT_BRACKET
  108              | id LEFT_BRACKET statement_list RIGHT_BRACKET

  109 variable_decl: composited_type id
  110              | id COLON EQUAL assignable_statement
  111              | composited_type id EQUAL assignable_statement
  112              | array_decl
  113              | EXPORT variable_decl

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  115           | composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  116           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  117           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

  118 init_list: id_or_constant
  119          | init_list COMMA id_or_constant

  120 return_statement: RETURN assignable_statement

  121 if_statement: cond_block
  122             | cond_block ELSE scope

  123 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope
  124           | cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  125 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

  127 struct_list: struct_list struct_pair
  128            | struct_pair

  129 struct_pair: composited_type id SEMICOLON
  130            | composited_type id EQUAL assignable_statement SEMICOLON

  131 arg_list: arg_list COMMA arg_pair
  132         | arg_pair

  133 statement_list: statement_list COMMA assignable_statement
  134               | assignable_statement

  135 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET
  136         | EXPORT func_ptr

  137 arg_pair: composited_type id
  138         | FSTOP FSTOP FSTOP

  139 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE
  140         | EXPORT enum_def

  141 enum_parts: enum_part
  142           | enum_parts COMMA enum_part

  143 enum_part: id
  144          | id EQUAL constant_int

  145 id_or_constant: id
  146               | constant

  147 include_or_link: INCLUDE STRING
  148                | LINK STRING

  149 constant: constant_int
  150         | constant_enum_value
  151         | constant_bool
  152         | FLOAT
  153         | STRING
  154         | NULLPTR

  155 constant_int: INTEGER

  156 constant_bool: TRUE
  157              | FALSE

  158 constant_enum_value: type COLON COLON id

  159 id: IDENTIFIER

  160 type: TYPE

  161 composited_type: type
  162                | MUT composited_type
  163                | composited_type ASTERISK
  164                | composited_type MUT

  165 type_list: composited_type
  166          | type_list COMMA composited_type


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 159
STRING (259) 147 148 153
INTEGER (260) 155
FLOAT (261) 152
TYPE (262) 29 30 160
LEFT_BRACKET (263) 72 99 100 101 102 104 105 107 108 123 124 125 126
    135
RIGHT_BRACKET (264) 72 99 100 101 102 104 105 107 108 123 124 125 126
    135
LEFT_BRACE (265) 31 34 46 47 115 117 139
RIGHT_BRACE (266) 31 34 46 47 115 117 139
LEFT_SQUARE_BRACKET (267) 63 64 114 115 116 117
RIGHT_SQUARE_BRACKET (268) 63 64 114 115 116 117
COMMA (269) 119 131 133 142 166
FSTOP (270) 65 66 138
SEMICOLON (271) 5 8 9 11 104 105 126 129 130
COLON (272) 110 158
PLUS (273) 58 73 78
MINUS (274) 57 74 79
ASTERISK (275) 77 80 163
FORWARD_SLASH (276) 81
PERCENT (277) 92
EQUAL (278) 69 70 71 110 111 115 117 130 144
EQUAL_EQUAL (279) 82
EXCLAMATION (280)
EXCLAMATION_EQUAL (281) 83
GREATER (282) 85
GREATER_EQUAL (283) 87
LESSER (284) 84
LESSER_EQUAL (285) 86
AND (286) 75 76 88
AND_AND (287)
OR (288) 89
OR_OR (289)
LEFT_SHIFT (290) 90
RIGHT_SHIFT (291) 91
RETURN (292) 120
DEFER (293) 36
IF (294) 123 124
ELSE (295) 122 124
FOR (296) 126
WHILE (297) 125
TYPEDEF (298) 30
ALIAS (299) 29
AUTO (300)
ENUM (301) 139
UNION (302) 34
TRUE (303) 156
FALSE (304) 157
MUT (305) 116 117 162 164
EXTERN (306)
IMPORT (307) 48
EXPORT (308) 32 35 103 106 113 136 140
INCLUDE (309) 147
LINK (310) 148
FUNC_PTR (311) 135
NULLPTR (312) 154
STRUCT (313) 31 33
ARROW (314) 67 68
UNKNOWN (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
module (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3, on right: 1 3
node_setup (64)
    on left: 4 5, on right: 2 3
semicoloned_statements (65)
    on left: 6 7, on right: 7 46
semicoloned_statement (66)
    on left: 8 9 10 11 12, on right: 6 7
statement (67)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    4 5 8 126
alias_statement (68)
    on left: 29, on right: 17
typedef_statement (69)
    on left: 30, on right: 18
struct_def (70)
    on left: 31 32, on right: 19 32
struct_decl (71)
    on left: 33, on right: 20 28
union_def (72)
    on left: 34 35, on right: 25 35
defer_statement (73)
    on left: 36, on right: 11
assignable_statement (74)
    on left: 37 38 39 40 41, on right: 9 36 69 70 71 110 111 120 123
    124 125 126 130 133 134
flow_control (75)
    on left: 42 43, on right: 10 26
loop (76)
    on left: 44 45, on right: 43
scope (77)
    on left: 46 47, on right: 99 100 101 102 122 123 124 125 126
import (78)
    on left: 48, on right: 21
unary_op (79)
    on left: 49 50 51 52 53 54 55 56, on right: 38 76 94 95
unary_minus (80)
    on left: 57, on right: 55
unary_plus (81)
    on left: 58, on right: 56
binary_op (82)
    on left: 59, on right: 39
assign_op (83)
    on left: 60, on right: 16
memberable (84)
    on left: 61 62, on right: 65 66 67 68
array_index (85)
    on left: 63 64, on right: 54 62 70
member_op (86)
    on left: 65 66 67 68, on right: 40 66 68 71 96 97 98
variable_assign (87)
    on left: 69 70 71, on right: 60
cast (88)
    on left: 72, on right: 49
increment (89)
    on left: 73, on right: 50
decrement (90)
    on left: 74, on right: 51
address_of (91)
    on left: 75 76, on right: 52
dereference (92)
    on left: 77, on right: 53
binop_id (93)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92, on right:
    93 94 95 96 97 98
binop (94)
    on left: 93 94 95 96 97 98, on right: 59
function_def (95)
    on left: 99 100 101 102 103, on right: 12 27 103
function_decl (96)
    on left: 104 105 106, on right: 14 106
function_call (97)
    on left: 107 108, on right: 37
variable_decl (98)
    on left: 109 110 111 112 113, on right: 15 113
array_decl (99)
    on left: 114 115 116 117, on right: 112
init_list (100)
    on left: 118 119, on right: 115 117 119
return_statement (101)
    on left: 120, on right: 13
if_statement (102)
    on left: 121 122, on right: 42
cond_block (103)
    on left: 123 124, on right: 121 122 124
while_loop (104)
    on left: 125, on right: 44
for_loop (105)
    on left: 126, on right: 45
struct_list (106)
    on left: 127 128, on right: 31 34 127
struct_pair (107)
    on left: 129 130, on right: 127 128
arg_list (108)
    on left: 131 132, on right: 99 101 105 131
statement_list (109)
    on left: 133 134, on right: 108 133
func_ptr (110)
    on left: 135 136, on right: 23 136
arg_pair (111)
    on left: 137 138, on right: 131 132
enum_def (112)
    on left: 139 140, on right: 24 140
enum_parts (113)
    on left: 141 142, on right: 139 142
enum_part (114)
    on left: 143 144, on right: 141 142
id_or_constant (115)
    on left: 145 146, on right: 41 57 58 72 73 74 93 94 95 97 98 118
    119
include_or_link (116)
    on left: 147 148, on right: 22
constant (117)
    on left: 149 150 151 152 153 154, on right: 146
constant_int (118)
    on left: 155, on right: 63 114 115 116 117 144 149
constant_bool (119)
    on left: 156 157, on right: 151
constant_enum_value (120)
    on left: 158, on right: 150
id (121)
    on left: 159, on right: 48 61 63 64 69 75 77 99 100 101 102 104
    105 107 108 109 110 111 114 115 116 117 129 130 137 143 144 145
    158
type (122)
    on left: 160, on right: 31 33 34 135 139 158 161
composited_type (123)
    on left: 161 162 163 164, on right: 72 99 100 104 105 109 111 114
    115 116 117 129 130 137 162 163 164 165 166
type_list (124)
    on left: 165 166, on right: 135 166


State 0

    0 $accept: . module $end

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    module             go to state 18
    statements         go to state 19
    node_setup         go to state 20
    statement          go to state 21
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 1

  159 id: IDENTIFIER .

    $default  reduce using rule 159 (id)


State 2

  160 type: TYPE .

    $default  reduce using rule 160 (type)


State 3

  120 return_statement: RETURN . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 61
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 4

  123 cond_block: IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 82


State 5

  126 for_loop: FOR . LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 83


State 6

  125 while_loop: WHILE . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 84


State 7

   30 typedef_statement: TYPEDEF . TYPE TYPE

    TYPE  shift, and go to state 85


State 8

   29 alias_statement: ALIAS . TYPE TYPE

    TYPE  shift, and go to state 86


State 9

  139 enum_def: ENUM . type LEFT_BRACE enum_parts RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 87


State 10

   34 union_def: UNION . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 88


State 11

  162 composited_type: MUT . composited_type

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 89


State 12

   48 import: IMPORT . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 90


State 13

   32 struct_def: EXPORT . struct_def
   35 union_def: EXPORT . union_def
  103 function_def: EXPORT . function_def
  106 function_decl: EXPORT . function_decl
  113 variable_decl: EXPORT . variable_decl
  136 func_ptr: EXPORT . func_ptr
  140 enum_def: EXPORT . enum_def

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    EXPORT      shift, and go to state 13
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 91

    struct_def       go to state 92
    union_def        go to state 93
    function_def     go to state 94
    function_decl    go to state 95
    variable_decl    go to state 96
    array_decl       go to state 38
    func_ptr         go to state 97
    enum_def         go to state 98
    id               go to state 99
    type             go to state 48
    composited_type  go to state 49


State 14

  147 include_or_link: INCLUDE . STRING

    STRING  shift, and go to state 100


State 15

  148 include_or_link: LINK . STRING

    STRING  shift, and go to state 101


State 16

  135 func_ptr: FUNC_PTR . type type LEFT_BRACKET type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type  go to state 102


State 17

   31 struct_def: STRUCT . type LEFT_BRACE struct_list RIGHT_BRACE
   33 struct_decl: STRUCT . type

    TYPE  shift, and go to state 2

    type  go to state 103


State 18

    0 $accept: module . $end

    $end  shift, and go to state 104


State 19

    1 module: statements .
    3 statements: statements . node_setup

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    $default  reduce using rule 1 (module)

    node_setup         go to state 105
    statement          go to state 21
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 20

    2 statements: node_setup .

    $default  reduce using rule 2 (statements)


State 21

    4 node_setup: statement .
    5           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 106

    $default  reduce using rule 4 (node_setup)


State 22

   17 statement: alias_statement .

    $default  reduce using rule 17 (statement)


State 23

   18 statement: typedef_statement .

    $default  reduce using rule 18 (statement)


State 24

   19 statement: struct_def .

    $default  reduce using rule 19 (statement)


State 25

   20 statement: struct_decl .
   28          | struct_decl .

    $end        reduce using rule 20 (statement)
    $end        [reduce using rule 28 (statement)]
    IDENTIFIER  reduce using rule 20 (statement)
    IDENTIFIER  [reduce using rule 28 (statement)]
    TYPE        reduce using rule 20 (statement)
    TYPE        [reduce using rule 28 (statement)]
    SEMICOLON   reduce using rule 20 (statement)
    SEMICOLON   [reduce using rule 28 (statement)]
    RETURN      reduce using rule 20 (statement)
    RETURN      [reduce using rule 28 (statement)]
    IF          reduce using rule 20 (statement)
    IF          [reduce using rule 28 (statement)]
    FOR         reduce using rule 20 (statement)
    FOR         [reduce using rule 28 (statement)]
    WHILE       reduce using rule 20 (statement)
    WHILE       [reduce using rule 28 (statement)]
    TYPEDEF     reduce using rule 20 (statement)
    TYPEDEF     [reduce using rule 28 (statement)]
    ALIAS       reduce using rule 20 (statement)
    ALIAS       [reduce using rule 28 (statement)]
    ENUM        reduce using rule 20 (statement)
    ENUM        [reduce using rule 28 (statement)]
    UNION       reduce using rule 20 (statement)
    UNION       [reduce using rule 28 (statement)]
    MUT         reduce using rule 20 (statement)
    MUT         [reduce using rule 28 (statement)]
    IMPORT      reduce using rule 20 (statement)
    IMPORT      [reduce using rule 28 (statement)]
    EXPORT      reduce using rule 20 (statement)
    EXPORT      [reduce using rule 28 (statement)]
    INCLUDE     reduce using rule 20 (statement)
    INCLUDE     [reduce using rule 28 (statement)]
    LINK        reduce using rule 20 (statement)
    LINK        [reduce using rule 28 (statement)]
    FUNC_PTR    reduce using rule 20 (statement)
    FUNC_PTR    [reduce using rule 28 (statement)]
    STRUCT      reduce using rule 20 (statement)
    STRUCT      [reduce using rule 28 (statement)]
    $default    reduce using rule 20 (statement)


State 26

   25 statement: union_def .

    $default  reduce using rule 25 (statement)


State 27

   26 statement: flow_control .

    $default  reduce using rule 26 (statement)


State 28

   43 flow_control: loop .

    $default  reduce using rule 43 (flow_control)


State 29

   21 statement: import .

    $default  reduce using rule 21 (statement)


State 30

   16 statement: assign_op .

    $default  reduce using rule 16 (statement)


State 31

   65 member_op: memberable . FSTOP memberable
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108


State 32

   62 memberable: array_index .
   70 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 109

    $default  reduce using rule 62 (memberable)


State 33

   71 variable_assign: member_op . EQUAL assignable_statement

    EQUAL  shift, and go to state 110


State 34

   60 assign_op: variable_assign .

    $default  reduce using rule 60 (assign_op)


State 35

   27 statement: function_def .

    $default  reduce using rule 27 (statement)


State 36

   14 statement: function_decl .

    $default  reduce using rule 14 (statement)


State 37

   15 statement: variable_decl .

    $default  reduce using rule 15 (statement)


State 38

  112 variable_decl: array_decl .

    $default  reduce using rule 112 (variable_decl)


State 39

   13 statement: return_statement .

    $default  reduce using rule 13 (statement)


State 40

   42 flow_control: if_statement .

    $default  reduce using rule 42 (flow_control)


State 41

  121 if_statement: cond_block .
  122             | cond_block . ELSE scope
  124 cond_block: cond_block . ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    ELSE  shift, and go to state 111

    $default  reduce using rule 121 (if_statement)


State 42

   44 loop: while_loop .

    $default  reduce using rule 44 (loop)


State 43

   45 loop: for_loop .

    $default  reduce using rule 45 (loop)


State 44

   23 statement: func_ptr .

    $default  reduce using rule 23 (statement)


State 45

   24 statement: enum_def .

    $default  reduce using rule 24 (statement)


State 46

   22 statement: include_or_link .

    $default  reduce using rule 22 (statement)


State 47

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
   69 variable_assign: id . EQUAL assignable_statement
  101 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  102             | id . LEFT_BRACKET RIGHT_BRACKET scope
  110 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET         shift, and go to state 112
    LEFT_SQUARE_BRACKET  shift, and go to state 113
    COLON                shift, and go to state 114
    EQUAL                shift, and go to state 115

    $default  reduce using rule 61 (memberable)


State 48

  161 composited_type: type .

    $default  reduce using rule 161 (composited_type)


State 49

   99 function_def: composited_type . id LEFT_BRACKET arg_list RIGHT_BRACKET scope
  100             | composited_type . id LEFT_BRACKET RIGHT_BRACKET scope
  104 function_decl: composited_type . id LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  105              | composited_type . id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  109 variable_decl: composited_type . id
  111              | composited_type . id EQUAL assignable_statement
  114 array_decl: composited_type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  115           | composited_type . id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  116           | composited_type . id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  117           | composited_type . id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 118


State 50

  153 constant: STRING .

    $default  reduce using rule 153 (constant)


State 51

  155 constant_int: INTEGER .

    $default  reduce using rule 155 (constant_int)


State 52

  152 constant: FLOAT .

    $default  reduce using rule 152 (constant)


State 53

   72 cast: LEFT_BRACKET . composited_type RIGHT_BRACKET id_or_constant

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 119


State 54

   58 unary_plus: PLUS . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 120
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 55

   57 unary_minus: MINUS . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 122
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 56

   77 dereference: ASTERISK . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 123


State 57

   75 address_of: AND . id
   76           | AND . unary_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    unary_op             go to state 124
    unary_minus          go to state 63
    unary_plus           go to state 64
    array_index          go to state 125
    cast                 go to state 68
    increment            go to state 69
    decrement            go to state 70
    address_of           go to state 71
    dereference          go to state 72
    id_or_constant       go to state 126
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 127
    type                 go to state 81


State 58

  156 constant_bool: TRUE .

    $default  reduce using rule 156 (constant_bool)


State 59

  157 constant_bool: FALSE .

    $default  reduce using rule 157 (constant_bool)


State 60

  154 constant: NULLPTR .

    $default  reduce using rule 154 (constant)


State 61

  120 return_statement: RETURN assignable_statement .

    $default  reduce using rule 120 (return_statement)


State 62

   38 assignable_statement: unary_op .
   95 binop: unary_op . binop_id id_or_constant

    PLUS               shift, and go to state 128
    MINUS              shift, and go to state 129
    ASTERISK           shift, and go to state 130
    FORWARD_SLASH      shift, and go to state 131
    PERCENT            shift, and go to state 132
    EQUAL_EQUAL        shift, and go to state 133
    EXCLAMATION_EQUAL  shift, and go to state 134
    GREATER            shift, and go to state 135
    GREATER_EQUAL      shift, and go to state 136
    LESSER             shift, and go to state 137
    LESSER_EQUAL       shift, and go to state 138
    AND                shift, and go to state 139
    OR                 shift, and go to state 140
    LEFT_SHIFT         shift, and go to state 141
    RIGHT_SHIFT        shift, and go to state 142

    $default  reduce using rule 38 (assignable_statement)

    binop_id  go to state 143


State 63

   55 unary_op: unary_minus .

    $default  reduce using rule 55 (unary_op)


State 64

   56 unary_op: unary_plus .

    $default  reduce using rule 56 (unary_op)


State 65

   39 assignable_statement: binary_op .

    $default  reduce using rule 39 (assignable_statement)


State 66

   54 unary_op: array_index .
   62 memberable: array_index .

    FSTOP     reduce using rule 62 (memberable)
    ARROW     reduce using rule 62 (memberable)
    $default  reduce using rule 54 (unary_op)


State 67

   40 assignable_statement: member_op .
   96 binop: member_op . binop_id member_op
   98      | member_op . binop_id id_or_constant

    PLUS               shift, and go to state 128
    MINUS              shift, and go to state 129
    ASTERISK           shift, and go to state 130
    FORWARD_SLASH      shift, and go to state 131
    PERCENT            shift, and go to state 132
    EQUAL_EQUAL        shift, and go to state 133
    EXCLAMATION_EQUAL  shift, and go to state 134
    GREATER            shift, and go to state 135
    GREATER_EQUAL      shift, and go to state 136
    LESSER             shift, and go to state 137
    LESSER_EQUAL       shift, and go to state 138
    AND                shift, and go to state 139
    OR                 shift, and go to state 140
    LEFT_SHIFT         shift, and go to state 141
    RIGHT_SHIFT        shift, and go to state 142

    $default  reduce using rule 40 (assignable_statement)

    binop_id  go to state 144


State 68

   49 unary_op: cast .

    $default  reduce using rule 49 (unary_op)


State 69

   50 unary_op: increment .

    $default  reduce using rule 50 (unary_op)


State 70

   51 unary_op: decrement .

    $default  reduce using rule 51 (unary_op)


State 71

   52 unary_op: address_of .

    $default  reduce using rule 52 (unary_op)


State 72

   53 unary_op: dereference .

    $default  reduce using rule 53 (unary_op)


State 73

   59 binary_op: binop .

    $default  reduce using rule 59 (binary_op)


State 74

   37 assignable_statement: function_call .

    $default  reduce using rule 37 (assignable_statement)


State 75

   41 assignable_statement: id_or_constant .
   73 increment: id_or_constant . PLUS PLUS
   74 decrement: id_or_constant . MINUS MINUS
   93 binop: id_or_constant . binop_id id_or_constant
   94      | id_or_constant . binop_id unary_op
   97      | id_or_constant . binop_id member_op

    PLUS               shift, and go to state 145
    MINUS              shift, and go to state 146
    ASTERISK           shift, and go to state 130
    FORWARD_SLASH      shift, and go to state 131
    PERCENT            shift, and go to state 132
    EQUAL_EQUAL        shift, and go to state 133
    EXCLAMATION_EQUAL  shift, and go to state 134
    GREATER            shift, and go to state 135
    GREATER_EQUAL      shift, and go to state 136
    LESSER             shift, and go to state 137
    LESSER_EQUAL       shift, and go to state 138
    AND                shift, and go to state 139
    OR                 shift, and go to state 140
    LEFT_SHIFT         shift, and go to state 141
    RIGHT_SHIFT        shift, and go to state 142

    $default  reduce using rule 41 (assignable_statement)

    binop_id  go to state 147


State 76

  146 id_or_constant: constant .

    $default  reduce using rule 146 (id_or_constant)


State 77

  149 constant: constant_int .

    $default  reduce using rule 149 (constant)


State 78

  151 constant: constant_bool .

    $default  reduce using rule 151 (constant)


State 79

  150 constant: constant_enum_value .

    $default  reduce using rule 150 (constant)


State 80

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  107 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  108              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  145 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 148
    LEFT_SQUARE_BRACKET  shift, and go to state 113

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 145 (id_or_constant)


State 81

  158 constant_enum_value: type . COLON COLON id

    COLON  shift, and go to state 149


State 82

  123 cond_block: IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 150
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 83

  126 for_loop: FOR LEFT_BRACKET . statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER  shift, and go to state 1
    TYPE        shift, and go to state 2
    RETURN      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    TYPEDEF     shift, and go to state 7
    ALIAS       shift, and go to state 8
    ENUM        shift, and go to state 9
    UNION       shift, and go to state 10
    MUT         shift, and go to state 11
    IMPORT      shift, and go to state 12
    EXPORT      shift, and go to state 13
    INCLUDE     shift, and go to state 14
    LINK        shift, and go to state 15
    FUNC_PTR    shift, and go to state 16
    STRUCT      shift, and go to state 17

    statement          go to state 151
    alias_statement    go to state 22
    typedef_statement  go to state 23
    struct_def         go to state 24
    struct_decl        go to state 25
    union_def          go to state 26
    flow_control       go to state 27
    loop               go to state 28
    import             go to state 29
    assign_op          go to state 30
    memberable         go to state 31
    array_index        go to state 32
    member_op          go to state 33
    variable_assign    go to state 34
    function_def       go to state 35
    function_decl      go to state 36
    variable_decl      go to state 37
    array_decl         go to state 38
    return_statement   go to state 39
    if_statement       go to state 40
    cond_block         go to state 41
    while_loop         go to state 42
    for_loop           go to state 43
    func_ptr           go to state 44
    enum_def           go to state 45
    include_or_link    go to state 46
    id                 go to state 47
    type               go to state 48
    composited_type    go to state 49


State 84

  125 while_loop: WHILE LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 152
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 85

   30 typedef_statement: TYPEDEF TYPE . TYPE

    TYPE  shift, and go to state 153


State 86

   29 alias_statement: ALIAS TYPE . TYPE

    TYPE  shift, and go to state 154


State 87

  139 enum_def: ENUM type . LEFT_BRACE enum_parts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 155


State 88

   34 union_def: UNION type . LEFT_BRACE struct_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 156


State 89

  162 composited_type: MUT composited_type .
  163                | composited_type . ASTERISK
  164                | composited_type . MUT

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    ASTERISK  [reduce using rule 162 (composited_type)]
    MUT       [reduce using rule 162 (composited_type)]
    $default  reduce using rule 162 (composited_type)


State 90

   48 import: IMPORT id .

    $default  reduce using rule 48 (import)


State 91

   31 struct_def: STRUCT . type LEFT_BRACE struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2

    type  go to state 157


State 92

   32 struct_def: EXPORT struct_def .

    $default  reduce using rule 32 (struct_def)


State 93

   35 union_def: EXPORT union_def .

    $default  reduce using rule 35 (union_def)


State 94

  103 function_def: EXPORT function_def .

    $default  reduce using rule 103 (function_def)


State 95

  106 function_decl: EXPORT function_decl .

    $default  reduce using rule 106 (function_decl)


State 96

  113 variable_decl: EXPORT variable_decl .

    $default  reduce using rule 113 (variable_decl)


State 97

  136 func_ptr: EXPORT func_ptr .

    $default  reduce using rule 136 (func_ptr)


State 98

  140 enum_def: EXPORT enum_def .

    $default  reduce using rule 140 (enum_def)


State 99

  101 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  102             | id . LEFT_BRACKET RIGHT_BRACKET scope
  110 variable_decl: id . COLON EQUAL assignable_statement

    LEFT_BRACKET  shift, and go to state 112
    COLON         shift, and go to state 114


State 100

  147 include_or_link: INCLUDE STRING .

    $default  reduce using rule 147 (include_or_link)


State 101

  148 include_or_link: LINK STRING .

    $default  reduce using rule 148 (include_or_link)


State 102

  135 func_ptr: FUNC_PTR type . type LEFT_BRACKET type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2

    type  go to state 158


State 103

   31 struct_def: STRUCT type . LEFT_BRACE struct_list RIGHT_BRACE
   33 struct_decl: STRUCT type .

    LEFT_BRACE  shift, and go to state 159

    $default  reduce using rule 33 (struct_decl)


State 104

    0 $accept: module $end .

    $default  accept


State 105

    3 statements: statements node_setup .

    $default  reduce using rule 3 (statements)


State 106

    5 node_setup: statement SEMICOLON .

    $default  reduce using rule 5 (node_setup)


State 107

   65 member_op: memberable FSTOP . memberable
   66          | memberable FSTOP . member_op

    IDENTIFIER  shift, and go to state 1

    memberable   go to state 160
    array_index  go to state 161
    member_op    go to state 162
    id           go to state 163


State 108

   67 member_op: memberable ARROW . memberable
   68          | memberable ARROW . member_op

    IDENTIFIER  shift, and go to state 1

    memberable   go to state 164
    array_index  go to state 161
    member_op    go to state 165
    id           go to state 163


State 109

   70 variable_assign: array_index EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 166
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 110

   71 variable_assign: member_op EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 167
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 111

  122 if_statement: cond_block ELSE . scope
  124 cond_block: cond_block ELSE . IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACE  shift, and go to state 168
    IF          shift, and go to state 169

    scope  go to state 170


State 112

  101 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  102             | id LEFT_BRACKET . RIGHT_BRACKET scope

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 171
    FSTOP          shift, and go to state 172
    MUT            shift, and go to state 11

    arg_list         go to state 173
    arg_pair         go to state 174
    type             go to state 48
    composited_type  go to state 175


State 113

   63 array_index: id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
   64            | id LEFT_SQUARE_BRACKET . id RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 1
    INTEGER     shift, and go to state 51

    constant_int  go to state 176
    id            go to state 177


State 114

  110 variable_decl: id COLON . EQUAL assignable_statement

    EQUAL  shift, and go to state 178


State 115

   69 variable_assign: id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 179
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 116

  163 composited_type: composited_type ASTERISK .

    $default  reduce using rule 163 (composited_type)


State 117

  164 composited_type: composited_type MUT .

    $default  reduce using rule 164 (composited_type)


State 118

   99 function_def: composited_type id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  100             | composited_type id . LEFT_BRACKET RIGHT_BRACKET scope
  104 function_decl: composited_type id . LEFT_BRACKET RIGHT_BRACKET SEMICOLON
  105              | composited_type id . LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON
  109 variable_decl: composited_type id .
  111              | composited_type id . EQUAL assignable_statement
  114 array_decl: composited_type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  115           | composited_type id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE
  116           | composited_type id . MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  117           | composited_type id . MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACKET         shift, and go to state 180
    LEFT_SQUARE_BRACKET  shift, and go to state 181
    EQUAL                shift, and go to state 182
    MUT                  shift, and go to state 183

    MUT       [reduce using rule 109 (variable_decl)]
    $default  reduce using rule 109 (variable_decl)


State 119

   72 cast: LEFT_BRACKET composited_type . RIGHT_BRACKET id_or_constant
  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT

    RIGHT_BRACKET  shift, and go to state 184
    ASTERISK       shift, and go to state 116
    MUT            shift, and go to state 117


State 120

   58 unary_plus: PLUS id_or_constant .

    $default  reduce using rule 58 (unary_plus)


State 121

  145 id_or_constant: id .

    $default  reduce using rule 145 (id_or_constant)


State 122

   57 unary_minus: MINUS id_or_constant .

    $default  reduce using rule 57 (unary_minus)


State 123

   77 dereference: ASTERISK id .

    $default  reduce using rule 77 (dereference)


State 124

   76 address_of: AND unary_op .

    $default  reduce using rule 76 (address_of)


State 125

   54 unary_op: array_index .

    $default  reduce using rule 54 (unary_op)


State 126

   73 increment: id_or_constant . PLUS PLUS
   74 decrement: id_or_constant . MINUS MINUS

    PLUS   shift, and go to state 185
    MINUS  shift, and go to state 186


State 127

   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
   75 address_of: AND id .
  145 id_or_constant: id .

    LEFT_SQUARE_BRACKET  shift, and go to state 113

    PLUS      reduce using rule 75 (address_of)
    PLUS      [reduce using rule 145 (id_or_constant)]
    MINUS     reduce using rule 75 (address_of)
    MINUS     [reduce using rule 145 (id_or_constant)]
    $default  reduce using rule 75 (address_of)


State 128

   78 binop_id: PLUS .

    $default  reduce using rule 78 (binop_id)


State 129

   79 binop_id: MINUS .

    $default  reduce using rule 79 (binop_id)


State 130

   80 binop_id: ASTERISK .

    $default  reduce using rule 80 (binop_id)


State 131

   81 binop_id: FORWARD_SLASH .

    $default  reduce using rule 81 (binop_id)


State 132

   92 binop_id: PERCENT .

    $default  reduce using rule 92 (binop_id)


State 133

   82 binop_id: EQUAL_EQUAL .

    $default  reduce using rule 82 (binop_id)


State 134

   83 binop_id: EXCLAMATION_EQUAL .

    $default  reduce using rule 83 (binop_id)


State 135

   85 binop_id: GREATER .

    $default  reduce using rule 85 (binop_id)


State 136

   87 binop_id: GREATER_EQUAL .

    $default  reduce using rule 87 (binop_id)


State 137

   84 binop_id: LESSER .

    $default  reduce using rule 84 (binop_id)


State 138

   86 binop_id: LESSER_EQUAL .

    $default  reduce using rule 86 (binop_id)


State 139

   88 binop_id: AND .

    $default  reduce using rule 88 (binop_id)


State 140

   89 binop_id: OR .

    $default  reduce using rule 89 (binop_id)


State 141

   90 binop_id: LEFT_SHIFT .

    $default  reduce using rule 90 (binop_id)


State 142

   91 binop_id: RIGHT_SHIFT .

    $default  reduce using rule 91 (binop_id)


State 143

   95 binop: unary_op binop_id . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 187
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 144

   96 binop: member_op binop_id . member_op
   98      | member_op binop_id . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    memberable           go to state 31
    array_index          go to state 161
    member_op            go to state 188
    id_or_constant       go to state 189
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 190
    type                 go to state 81


State 145

   73 increment: id_or_constant PLUS . PLUS
   78 binop_id: PLUS .

    PLUS  shift, and go to state 191

    PLUS      [reduce using rule 78 (binop_id)]
    $default  reduce using rule 78 (binop_id)


State 146

   74 decrement: id_or_constant MINUS . MINUS
   79 binop_id: MINUS .

    MINUS  shift, and go to state 192

    MINUS     [reduce using rule 79 (binop_id)]
    $default  reduce using rule 79 (binop_id)


State 147

   93 binop: id_or_constant binop_id . id_or_constant
   94      | id_or_constant binop_id . unary_op
   97      | id_or_constant binop_id . member_op

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    unary_op             go to state 193
    unary_minus          go to state 63
    unary_plus           go to state 64
    memberable           go to state 31
    array_index          go to state 66
    member_op            go to state 194
    cast                 go to state 68
    increment            go to state 69
    decrement            go to state 70
    address_of           go to state 71
    dereference          go to state 72
    id_or_constant       go to state 195
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 190
    type                 go to state 81


State 148

  107 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  108              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 50
    INTEGER        shift, and go to state 51
    FLOAT          shift, and go to state 52
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 53
    RIGHT_BRACKET  shift, and go to state 196
    PLUS           shift, and go to state 54
    MINUS          shift, and go to state 55
    ASTERISK       shift, and go to state 56
    AND            shift, and go to state 57
    TRUE           shift, and go to state 58
    FALSE          shift, and go to state 59
    NULLPTR        shift, and go to state 60

    assignable_statement  go to state 197
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    statement_list        go to state 198
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 149

  158 constant_enum_value: type COLON . COLON id

    COLON  shift, and go to state 199


State 150

  123 cond_block: IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 200


State 151

  126 for_loop: FOR LEFT_BRACKET statement . SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 201


State 152

  125 while_loop: WHILE LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 202


State 153

   30 typedef_statement: TYPEDEF TYPE TYPE .

    $default  reduce using rule 30 (typedef_statement)


State 154

   29 alias_statement: ALIAS TYPE TYPE .

    $default  reduce using rule 29 (alias_statement)


State 155

  139 enum_def: ENUM type LEFT_BRACE . enum_parts RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1

    enum_parts  go to state 203
    enum_part   go to state 204
    id          go to state 205


State 156

   34 union_def: UNION type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    struct_list      go to state 206
    struct_pair      go to state 207
    type             go to state 48
    composited_type  go to state 208


State 157

   31 struct_def: STRUCT type . LEFT_BRACE struct_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 159


State 158

  135 func_ptr: FUNC_PTR type type . LEFT_BRACKET type_list RIGHT_BRACKET

    LEFT_BRACKET  shift, and go to state 209


State 159

   31 struct_def: STRUCT type LEFT_BRACE . struct_list RIGHT_BRACE

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    struct_list      go to state 210
    struct_pair      go to state 207
    type             go to state 48
    composited_type  go to state 208


State 160

   65 member_op: memberable . FSTOP memberable
   65          | memberable FSTOP memberable .
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108

    $default  reduce using rule 65 (member_op)


State 161

   62 memberable: array_index .

    $default  reduce using rule 62 (memberable)


State 162

   66 member_op: memberable FSTOP member_op .

    $default  reduce using rule 66 (member_op)


State 163

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 113

    $default  reduce using rule 61 (memberable)


State 164

   65 member_op: memberable . FSTOP memberable
   66          | memberable . FSTOP member_op
   67          | memberable . ARROW memberable
   67          | memberable ARROW memberable .
   68          | memberable . ARROW member_op

    FSTOP  shift, and go to state 107
    ARROW  shift, and go to state 108

    $default  reduce using rule 67 (member_op)


State 165

   68 member_op: memberable ARROW member_op .

    $default  reduce using rule 68 (member_op)


State 166

   70 variable_assign: array_index EQUAL assignable_statement .

    $default  reduce using rule 70 (variable_assign)


State 167

   71 variable_assign: member_op EQUAL assignable_statement .

    $default  reduce using rule 71 (variable_assign)


State 168

   46 scope: LEFT_BRACE . semicoloned_statements RIGHT_BRACE
   47      | LEFT_BRACE . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    RIGHT_BRACE   shift, and go to state 211
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 212
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    MUT           shift, and go to state 11
    IMPORT        shift, and go to state 12
    EXPORT        shift, and go to state 13
    INCLUDE       shift, and go to state 14
    LINK          shift, and go to state 15
    FUNC_PTR      shift, and go to state 16
    NULLPTR       shift, and go to state 60
    STRUCT        shift, and go to state 17

    semicoloned_statements  go to state 213
    semicoloned_statement   go to state 214
    statement               go to state 215
    alias_statement         go to state 22
    typedef_statement       go to state 23
    struct_def              go to state 24
    struct_decl             go to state 25
    union_def               go to state 26
    defer_statement         go to state 216
    assignable_statement    go to state 217
    flow_control            go to state 218
    loop                    go to state 28
    import                  go to state 29
    unary_op                go to state 62
    unary_minus             go to state 63
    unary_plus              go to state 64
    binary_op               go to state 65
    assign_op               go to state 30
    memberable              go to state 31
    array_index             go to state 219
    member_op               go to state 220
    variable_assign         go to state 34
    cast                    go to state 68
    increment               go to state 69
    decrement               go to state 70
    address_of              go to state 71
    dereference             go to state 72
    binop                   go to state 73
    function_def            go to state 221
    function_decl           go to state 36
    function_call           go to state 74
    variable_decl           go to state 37
    array_decl              go to state 38
    return_statement        go to state 39
    if_statement            go to state 40
    cond_block              go to state 41
    while_loop              go to state 42
    for_loop                go to state 43
    func_ptr                go to state 44
    enum_def                go to state 45
    id_or_constant          go to state 75
    include_or_link         go to state 46
    constant                go to state 76
    constant_int            go to state 77
    constant_bool           go to state 78
    constant_enum_value     go to state 79
    id                      go to state 222
    type                    go to state 223
    composited_type         go to state 49


State 169

  124 cond_block: cond_block ELSE IF . LEFT_BRACKET assignable_statement RIGHT_BRACKET scope

    LEFT_BRACKET  shift, and go to state 224


State 170

  122 if_statement: cond_block ELSE scope .

    $default  reduce using rule 122 (if_statement)


State 171

  102 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 225


State 172

  138 arg_pair: FSTOP . FSTOP FSTOP

    FSTOP  shift, and go to state 226


State 173

  101 function_def: id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  131 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 227
    COMMA          shift, and go to state 228


State 174

  132 arg_list: arg_pair .

    $default  reduce using rule 132 (arg_list)


State 175

  137 arg_pair: composited_type . id
  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 229


State 176

   63 array_index: id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 230


State 177

   64 array_index: id LEFT_SQUARE_BRACKET id . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 231


State 178

  110 variable_decl: id COLON EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 232
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 179

   69 variable_assign: id EQUAL assignable_statement .

    $default  reduce using rule 69 (variable_assign)


State 180

   99 function_def: composited_type id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  100             | composited_type id LEFT_BRACKET . RIGHT_BRACKET scope
  104 function_decl: composited_type id LEFT_BRACKET . RIGHT_BRACKET SEMICOLON
  105              | composited_type id LEFT_BRACKET . arg_list RIGHT_BRACKET SEMICOLON

    TYPE           shift, and go to state 2
    RIGHT_BRACKET  shift, and go to state 233
    FSTOP          shift, and go to state 172
    MUT            shift, and go to state 11

    arg_list         go to state 234
    arg_pair         go to state 174
    type             go to state 48
    composited_type  go to state 175


State 181

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
  115           | composited_type id LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    INTEGER  shift, and go to state 51

    constant_int  go to state 235


State 182

  111 variable_decl: composited_type id EQUAL . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 236
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 183

  116 array_decl: composited_type id MUT . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
  117           | composited_type id MUT . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    LEFT_SQUARE_BRACKET  shift, and go to state 237


State 184

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 238
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 185

   73 increment: id_or_constant PLUS . PLUS

    PLUS  shift, and go to state 191


State 186

   74 decrement: id_or_constant MINUS . MINUS

    MINUS  shift, and go to state 192


State 187

   95 binop: unary_op binop_id id_or_constant .

    $default  reduce using rule 95 (binop)


State 188

   96 binop: member_op binop_id member_op .

    $default  reduce using rule 96 (binop)


State 189

   98 binop: member_op binop_id id_or_constant .

    $default  reduce using rule 98 (binop)


State 190

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
  145 id_or_constant: id .

    LEFT_SQUARE_BRACKET  shift, and go to state 113

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 145 (id_or_constant)


State 191

   73 increment: id_or_constant PLUS PLUS .

    $default  reduce using rule 73 (increment)


State 192

   74 decrement: id_or_constant MINUS MINUS .

    $default  reduce using rule 74 (decrement)


State 193

   94 binop: id_or_constant binop_id unary_op .

    $default  reduce using rule 94 (binop)


State 194

   97 binop: id_or_constant binop_id member_op .

    $default  reduce using rule 97 (binop)


State 195

   73 increment: id_or_constant . PLUS PLUS
   74 decrement: id_or_constant . MINUS MINUS
   93 binop: id_or_constant binop_id id_or_constant .

    PLUS   shift, and go to state 185
    MINUS  shift, and go to state 186

    $default  reduce using rule 93 (binop)


State 196

  107 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 107 (function_call)


State 197

  134 statement_list: assignable_statement .

    $default  reduce using rule 134 (statement_list)


State 198

  108 function_call: id LEFT_BRACKET statement_list . RIGHT_BRACKET
  133 statement_list: statement_list . COMMA assignable_statement

    RIGHT_BRACKET  shift, and go to state 239
    COMMA          shift, and go to state 240


State 199

  158 constant_enum_value: type COLON COLON . id

    IDENTIFIER  shift, and go to state 1

    id  go to state 241


State 200

  123 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 242


State 201

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON . assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 243
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 202

  125 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 244


State 203

  139 enum_def: ENUM type LEFT_BRACE enum_parts . RIGHT_BRACE
  142 enum_parts: enum_parts . COMMA enum_part

    RIGHT_BRACE  shift, and go to state 245
    COMMA        shift, and go to state 246


State 204

  141 enum_parts: enum_part .

    $default  reduce using rule 141 (enum_parts)


State 205

  143 enum_part: id .
  144          | id . EQUAL constant_int

    EQUAL  shift, and go to state 247

    $default  reduce using rule 143 (enum_part)


State 206

   34 union_def: UNION type LEFT_BRACE struct_list . RIGHT_BRACE
  127 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 248
    MUT          shift, and go to state 11

    struct_pair      go to state 249
    type             go to state 48
    composited_type  go to state 208


State 207

  128 struct_list: struct_pair .

    $default  reduce using rule 128 (struct_list)


State 208

  129 struct_pair: composited_type . id SEMICOLON
  130            | composited_type . id EQUAL assignable_statement SEMICOLON
  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT

    IDENTIFIER  shift, and go to state 1
    ASTERISK    shift, and go to state 116
    MUT         shift, and go to state 117

    id  go to state 250


State 209

  135 func_ptr: FUNC_PTR type type LEFT_BRACKET . type_list RIGHT_BRACKET

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 251
    type_list        go to state 252


State 210

   31 struct_def: STRUCT type LEFT_BRACE struct_list . RIGHT_BRACE
  127 struct_list: struct_list . struct_pair

    TYPE         shift, and go to state 2
    RIGHT_BRACE  shift, and go to state 253
    MUT          shift, and go to state 11

    struct_pair      go to state 249
    type             go to state 48
    composited_type  go to state 208


State 211

   47 scope: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 47 (scope)


State 212

   36 defer_statement: DEFER . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 254
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 213

    7 semicoloned_statements: semicoloned_statements . semicoloned_statement
   46 scope: LEFT_BRACE semicoloned_statements . RIGHT_BRACE

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    RIGHT_BRACE   shift, and go to state 255
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    RETURN        shift, and go to state 3
    DEFER         shift, and go to state 212
    IF            shift, and go to state 4
    FOR           shift, and go to state 5
    WHILE         shift, and go to state 6
    TYPEDEF       shift, and go to state 7
    ALIAS         shift, and go to state 8
    ENUM          shift, and go to state 9
    UNION         shift, and go to state 10
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    MUT           shift, and go to state 11
    IMPORT        shift, and go to state 12
    EXPORT        shift, and go to state 13
    INCLUDE       shift, and go to state 14
    LINK          shift, and go to state 15
    FUNC_PTR      shift, and go to state 16
    NULLPTR       shift, and go to state 60
    STRUCT        shift, and go to state 17

    semicoloned_statement  go to state 256
    statement              go to state 215
    alias_statement        go to state 22
    typedef_statement      go to state 23
    struct_def             go to state 24
    struct_decl            go to state 25
    union_def              go to state 26
    defer_statement        go to state 216
    assignable_statement   go to state 217
    flow_control           go to state 218
    loop                   go to state 28
    import                 go to state 29
    unary_op               go to state 62
    unary_minus            go to state 63
    unary_plus             go to state 64
    binary_op              go to state 65
    assign_op              go to state 30
    memberable             go to state 31
    array_index            go to state 219
    member_op              go to state 220
    variable_assign        go to state 34
    cast                   go to state 68
    increment              go to state 69
    decrement              go to state 70
    address_of             go to state 71
    dereference            go to state 72
    binop                  go to state 73
    function_def           go to state 221
    function_decl          go to state 36
    function_call          go to state 74
    variable_decl          go to state 37
    array_decl             go to state 38
    return_statement       go to state 39
    if_statement           go to state 40
    cond_block             go to state 41
    while_loop             go to state 42
    for_loop               go to state 43
    func_ptr               go to state 44
    enum_def               go to state 45
    id_or_constant         go to state 75
    include_or_link        go to state 46
    constant               go to state 76
    constant_int           go to state 77
    constant_bool          go to state 78
    constant_enum_value    go to state 79
    id                     go to state 222
    type                   go to state 223
    composited_type        go to state 49


State 214

    6 semicoloned_statements: semicoloned_statement .

    $default  reduce using rule 6 (semicoloned_statements)


State 215

    8 semicoloned_statement: statement . SEMICOLON

    SEMICOLON  shift, and go to state 257


State 216

   11 semicoloned_statement: defer_statement . SEMICOLON

    SEMICOLON  shift, and go to state 258


State 217

    9 semicoloned_statement: assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 259


State 218

   10 semicoloned_statement: flow_control .
   26 statement: flow_control .

    SEMICOLON  reduce using rule 26 (statement)
    $default   reduce using rule 10 (semicoloned_statement)


State 219

   54 unary_op: array_index .
   62 memberable: array_index .
   70 variable_assign: array_index . EQUAL assignable_statement

    EQUAL  shift, and go to state 109

    FSTOP     reduce using rule 62 (memberable)
    ARROW     reduce using rule 62 (memberable)
    $default  reduce using rule 54 (unary_op)


State 220

   40 assignable_statement: member_op .
   71 variable_assign: member_op . EQUAL assignable_statement
   96 binop: member_op . binop_id member_op
   98      | member_op . binop_id id_or_constant

    PLUS               shift, and go to state 128
    MINUS              shift, and go to state 129
    ASTERISK           shift, and go to state 130
    FORWARD_SLASH      shift, and go to state 131
    PERCENT            shift, and go to state 132
    EQUAL              shift, and go to state 110
    EQUAL_EQUAL        shift, and go to state 133
    EXCLAMATION_EQUAL  shift, and go to state 134
    GREATER            shift, and go to state 135
    GREATER_EQUAL      shift, and go to state 136
    LESSER             shift, and go to state 137
    LESSER_EQUAL       shift, and go to state 138
    AND                shift, and go to state 139
    OR                 shift, and go to state 140
    LEFT_SHIFT         shift, and go to state 141
    RIGHT_SHIFT        shift, and go to state 142

    $default  reduce using rule 40 (assignable_statement)

    binop_id  go to state 144


State 221

   12 semicoloned_statement: function_def .
   27 statement: function_def .

    SEMICOLON  reduce using rule 27 (statement)
    $default   reduce using rule 12 (semicoloned_statement)


State 222

   61 memberable: id .
   63 array_index: id . LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET
   64            | id . LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET
   69 variable_assign: id . EQUAL assignable_statement
  101 function_def: id . LEFT_BRACKET arg_list RIGHT_BRACKET scope
  102             | id . LEFT_BRACKET RIGHT_BRACKET scope
  107 function_call: id . LEFT_BRACKET RIGHT_BRACKET
  108              | id . LEFT_BRACKET statement_list RIGHT_BRACKET
  110 variable_decl: id . COLON EQUAL assignable_statement
  145 id_or_constant: id .

    LEFT_BRACKET         shift, and go to state 260
    LEFT_SQUARE_BRACKET  shift, and go to state 113
    COLON                shift, and go to state 114
    EQUAL                shift, and go to state 115

    FSTOP     reduce using rule 61 (memberable)
    ARROW     reduce using rule 61 (memberable)
    $default  reduce using rule 145 (id_or_constant)


State 223

  158 constant_enum_value: type . COLON COLON id
  161 composited_type: type .

    COLON  shift, and go to state 149

    $default  reduce using rule 161 (composited_type)


State 224

  124 cond_block: cond_block ELSE IF LEFT_BRACKET . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 261
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 225

  102 function_def: id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 102 (function_def)


State 226

  138 arg_pair: FSTOP FSTOP . FSTOP

    FSTOP  shift, and go to state 262


State 227

  101 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 263


State 228

  131 arg_list: arg_list COMMA . arg_pair

    TYPE   shift, and go to state 2
    FSTOP  shift, and go to state 172
    MUT    shift, and go to state 11

    arg_pair         go to state 264
    type             go to state 48
    composited_type  go to state 175


State 229

  137 arg_pair: composited_type id .

    $default  reduce using rule 137 (arg_pair)


State 230

   63 array_index: id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 63 (array_index)


State 231

   64 array_index: id LEFT_SQUARE_BRACKET id RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 64 (array_index)


State 232

  110 variable_decl: id COLON EQUAL assignable_statement .

    $default  reduce using rule 110 (variable_decl)


State 233

  100 function_def: composited_type id LEFT_BRACKET RIGHT_BRACKET . scope
  104 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 168
    SEMICOLON   shift, and go to state 265

    scope  go to state 266


State 234

   99 function_def: composited_type id LEFT_BRACKET arg_list . RIGHT_BRACKET scope
  105 function_decl: composited_type id LEFT_BRACKET arg_list . RIGHT_BRACKET SEMICOLON
  131 arg_list: arg_list . COMMA arg_pair

    RIGHT_BRACKET  shift, and go to state 267
    COMMA          shift, and go to state 228


State 235

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET
  115           | composited_type id LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    RIGHT_SQUARE_BRACKET  shift, and go to state 268


State 236

  111 variable_decl: composited_type id EQUAL assignable_statement .

    $default  reduce using rule 111 (variable_decl)


State 237

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET
  117           | composited_type id MUT LEFT_SQUARE_BRACKET . constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    INTEGER  shift, and go to state 51

    constant_int  go to state 269


State 238

   72 cast: LEFT_BRACKET composited_type RIGHT_BRACKET id_or_constant .

    $default  reduce using rule 72 (cast)


State 239

  108 function_call: id LEFT_BRACKET statement_list RIGHT_BRACKET .

    $default  reduce using rule 108 (function_call)


State 240

  133 statement_list: statement_list COMMA . assignable_statement

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 270
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 241

  158 constant_enum_value: type COLON COLON id .

    $default  reduce using rule 158 (constant_enum_value)


State 242

  123 cond_block: IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 123 (cond_block)


State 243

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement . SEMICOLON assignable_statement RIGHT_BRACKET scope

    SEMICOLON  shift, and go to state 271


State 244

  125 while_loop: WHILE LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 125 (while_loop)


State 245

  139 enum_def: ENUM type LEFT_BRACE enum_parts RIGHT_BRACE .

    $default  reduce using rule 139 (enum_def)


State 246

  142 enum_parts: enum_parts COMMA . enum_part

    IDENTIFIER  shift, and go to state 1

    enum_part  go to state 272
    id         go to state 205


State 247

  144 enum_part: id EQUAL . constant_int

    INTEGER  shift, and go to state 51

    constant_int  go to state 273


State 248

   34 union_def: UNION type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 34 (union_def)


State 249

  127 struct_list: struct_list struct_pair .

    $default  reduce using rule 127 (struct_list)


State 250

  129 struct_pair: composited_type id . SEMICOLON
  130            | composited_type id . EQUAL assignable_statement SEMICOLON

    SEMICOLON  shift, and go to state 274
    EQUAL      shift, and go to state 275


State 251

  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT
  165 type_list: composited_type .

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    $default  reduce using rule 165 (type_list)


State 252

  135 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list . RIGHT_BRACKET
  166 type_list: type_list . COMMA composited_type

    RIGHT_BRACKET  shift, and go to state 276
    COMMA          shift, and go to state 277


State 253

   31 struct_def: STRUCT type LEFT_BRACE struct_list RIGHT_BRACE .

    $default  reduce using rule 31 (struct_def)


State 254

   36 defer_statement: DEFER assignable_statement .

    $default  reduce using rule 36 (defer_statement)


State 255

   46 scope: LEFT_BRACE semicoloned_statements RIGHT_BRACE .

    $default  reduce using rule 46 (scope)


State 256

    7 semicoloned_statements: semicoloned_statements semicoloned_statement .

    $default  reduce using rule 7 (semicoloned_statements)


State 257

    8 semicoloned_statement: statement SEMICOLON .

    $default  reduce using rule 8 (semicoloned_statement)


State 258

   11 semicoloned_statement: defer_statement SEMICOLON .

    $default  reduce using rule 11 (semicoloned_statement)


State 259

    9 semicoloned_statement: assignable_statement SEMICOLON .

    $default  reduce using rule 9 (semicoloned_statement)


State 260

  101 function_def: id LEFT_BRACKET . arg_list RIGHT_BRACKET scope
  102             | id LEFT_BRACKET . RIGHT_BRACKET scope
  107 function_call: id LEFT_BRACKET . RIGHT_BRACKET
  108              | id LEFT_BRACKET . statement_list RIGHT_BRACKET

    IDENTIFIER     shift, and go to state 1
    STRING         shift, and go to state 50
    INTEGER        shift, and go to state 51
    FLOAT          shift, and go to state 52
    TYPE           shift, and go to state 2
    LEFT_BRACKET   shift, and go to state 53
    RIGHT_BRACKET  shift, and go to state 278
    FSTOP          shift, and go to state 172
    PLUS           shift, and go to state 54
    MINUS          shift, and go to state 55
    ASTERISK       shift, and go to state 56
    AND            shift, and go to state 57
    TRUE           shift, and go to state 58
    FALSE          shift, and go to state 59
    MUT            shift, and go to state 11
    NULLPTR        shift, and go to state 60

    assignable_statement  go to state 197
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    arg_list              go to state 173
    statement_list        go to state 198
    arg_pair              go to state 174
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 223
    composited_type       go to state 175


State 261

  124 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 279


State 262

  138 arg_pair: FSTOP FSTOP FSTOP .

    $default  reduce using rule 138 (arg_pair)


State 263

  101 function_def: id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 101 (function_def)


State 264

  131 arg_list: arg_list COMMA arg_pair .

    $default  reduce using rule 131 (arg_list)


State 265

  104 function_decl: composited_type id LEFT_BRACKET RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 104 (function_decl)


State 266

  100 function_def: composited_type id LEFT_BRACKET RIGHT_BRACKET scope .

    $default  reduce using rule 100 (function_def)


State 267

   99 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET . scope
  105 function_decl: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET . SEMICOLON

    LEFT_BRACE  shift, and go to state 168
    SEMICOLON   shift, and go to state 280

    scope  go to state 281


State 268

  114 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .
  115           | composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET . EQUAL LEFT_BRACE init_list RIGHT_BRACE

    EQUAL  shift, and go to state 282

    $default  reduce using rule 114 (array_decl)


State 269

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET
  117           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int . RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE

    RIGHT_SQUARE_BRACKET  shift, and go to state 283


State 270

  133 statement_list: statement_list COMMA assignable_statement .

    $default  reduce using rule 133 (statement_list)


State 271

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON . assignable_statement RIGHT_BRACKET scope

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 284
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 272

  142 enum_parts: enum_parts COMMA enum_part .

    $default  reduce using rule 142 (enum_parts)


State 273

  144 enum_part: id EQUAL constant_int .

    $default  reduce using rule 144 (enum_part)


State 274

  129 struct_pair: composited_type id SEMICOLON .

    $default  reduce using rule 129 (struct_pair)


State 275

  130 struct_pair: composited_type id EQUAL . assignable_statement SEMICOLON

    IDENTIFIER    shift, and go to state 1
    STRING        shift, and go to state 50
    INTEGER       shift, and go to state 51
    FLOAT         shift, and go to state 52
    TYPE          shift, and go to state 2
    LEFT_BRACKET  shift, and go to state 53
    PLUS          shift, and go to state 54
    MINUS         shift, and go to state 55
    ASTERISK      shift, and go to state 56
    AND           shift, and go to state 57
    TRUE          shift, and go to state 58
    FALSE         shift, and go to state 59
    NULLPTR       shift, and go to state 60

    assignable_statement  go to state 285
    unary_op              go to state 62
    unary_minus           go to state 63
    unary_plus            go to state 64
    binary_op             go to state 65
    memberable            go to state 31
    array_index           go to state 66
    member_op             go to state 67
    cast                  go to state 68
    increment             go to state 69
    decrement             go to state 70
    address_of            go to state 71
    dereference           go to state 72
    binop                 go to state 73
    function_call         go to state 74
    id_or_constant        go to state 75
    constant              go to state 76
    constant_int          go to state 77
    constant_bool         go to state 78
    constant_enum_value   go to state 79
    id                    go to state 80
    type                  go to state 81


State 276

  135 func_ptr: FUNC_PTR type type LEFT_BRACKET type_list RIGHT_BRACKET .

    $default  reduce using rule 135 (func_ptr)


State 277

  166 type_list: type_list COMMA . composited_type

    TYPE  shift, and go to state 2
    MUT   shift, and go to state 11

    type             go to state 48
    composited_type  go to state 286


State 278

  102 function_def: id LEFT_BRACKET RIGHT_BRACKET . scope
  107 function_call: id LEFT_BRACKET RIGHT_BRACKET .

    LEFT_BRACE  shift, and go to state 168

    $default  reduce using rule 107 (function_call)

    scope  go to state 225


State 279

  124 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 287


State 280

  105 function_decl: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET SEMICOLON .

    $default  reduce using rule 105 (function_decl)


State 281

   99 function_def: composited_type id LEFT_BRACKET arg_list RIGHT_BRACKET scope .

    $default  reduce using rule 99 (function_def)


State 282

  115 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL . LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 288


State 283

  116 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET .
  117           | composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET . EQUAL LEFT_BRACE init_list RIGHT_BRACE

    EQUAL  shift, and go to state 289

    $default  reduce using rule 116 (array_decl)


State 284

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement . RIGHT_BRACKET scope

    RIGHT_BRACKET  shift, and go to state 290


State 285

  130 struct_pair: composited_type id EQUAL assignable_statement . SEMICOLON

    SEMICOLON  shift, and go to state 291


State 286

  163 composited_type: composited_type . ASTERISK
  164                | composited_type . MUT
  166 type_list: type_list COMMA composited_type .

    ASTERISK  shift, and go to state 116
    MUT       shift, and go to state 117

    $default  reduce using rule 166 (type_list)


State 287

  124 cond_block: cond_block ELSE IF LEFT_BRACKET assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 124 (cond_block)


State 288

  115 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE . init_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    init_list            go to state 292
    id_or_constant       go to state 293
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 289

  117 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL . LEFT_BRACE init_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 294


State 290

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET . scope

    LEFT_BRACE  shift, and go to state 168

    scope  go to state 295


State 291

  130 struct_pair: composited_type id EQUAL assignable_statement SEMICOLON .

    $default  reduce using rule 130 (struct_pair)


State 292

  115 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list . RIGHT_BRACE
  119 init_list: init_list . COMMA id_or_constant

    RIGHT_BRACE  shift, and go to state 296
    COMMA        shift, and go to state 297


State 293

  118 init_list: id_or_constant .

    $default  reduce using rule 118 (init_list)


State 294

  117 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE . init_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    init_list            go to state 298
    id_or_constant       go to state 293
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 295

  126 for_loop: FOR LEFT_BRACKET statement SEMICOLON assignable_statement SEMICOLON assignable_statement RIGHT_BRACKET scope .

    $default  reduce using rule 126 (for_loop)


State 296

  115 array_decl: composited_type id LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE .

    $default  reduce using rule 115 (array_decl)


State 297

  119 init_list: init_list COMMA . id_or_constant

    IDENTIFIER  shift, and go to state 1
    STRING      shift, and go to state 50
    INTEGER     shift, and go to state 51
    FLOAT       shift, and go to state 52
    TYPE        shift, and go to state 2
    TRUE        shift, and go to state 58
    FALSE       shift, and go to state 59
    NULLPTR     shift, and go to state 60

    id_or_constant       go to state 299
    constant             go to state 76
    constant_int         go to state 77
    constant_bool        go to state 78
    constant_enum_value  go to state 79
    id                   go to state 121
    type                 go to state 81


State 298

  117 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list . RIGHT_BRACE
  119 init_list: init_list . COMMA id_or_constant

    RIGHT_BRACE  shift, and go to state 300
    COMMA        shift, and go to state 297


State 299

  119 init_list: init_list COMMA id_or_constant .

    $default  reduce using rule 119 (init_list)


State 300

  117 array_decl: composited_type id MUT LEFT_SQUARE_BRACKET constant_int RIGHT_SQUARE_BRACKET EQUAL LEFT_BRACE init_list RIGHT_BRACE .

    $default  reduce using rule 117 (array_decl)
